<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator>
  <link href="https://old.tacosdedatos.com/author/io_exception/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://old.tacosdedatos.com/" rel="alternate" type="text/html" />
  <updated>2021-08-01T20:46:16+00:00</updated>
  <id>https://old.tacosdedatos.com/author/io_exception/feed.xml</id>

  
  
  

  
    <title type="html">üåÆ tacos de datos | Aprende visualizaci√≥n de datos en espa√±ol. | </title>
  

  
    <subtitle>Tu sitio para aprender de visualizaci√≥n y ciencia de datos en espa√±ol. Consejos, recursos y mejores pr√°cticas para tus proyectos de tecnolog√≠a, periodismo de datos y an√°lisis estad√≠sticos.</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Mejorando nuestros gr√°ficos de barras</title>
      <link href="https://old.tacosdedatos.com/mejorando-barplots" rel="alternate" type="text/html" title="Mejorando nuestros gr√°ficos de barras" />
      <published>2020-09-25T10:00:00+00:00</published>
      <updated>2020-09-25T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/mejorando-barplots</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/mejorando-barplots">&lt;p&gt;En esta ocasi√≥n les quiero hablar de c√≥mo mejorar sus gr√°ficos de barras con colores y fuentes personalizadas‚Ä¶ aunque me gustar√≠a que esta fuera una lecci√≥n sobre c√≥mo es que podemos sacar m√°s provecho de Matplotlib y herramientas (como Seaborn) que se construyen al rededor de esta poderosa librer√≠a.&lt;/p&gt;

&lt;p&gt;Puedes usar este &lt;a href=&quot;https://www.kaggle.com/ioexception/las-cartas-m-s-usadas-de-yu-gi-oh&quot;&gt;notebook de Kaggle&lt;/a&gt; como referencia o como punto de inicio para tu experimentaci√≥n.&lt;/p&gt;

&lt;h2 id=&quot;los-datos&quot;&gt;Los datos&lt;/h2&gt;
&lt;p&gt;Ultimamente he estado obsesionado con Yu-Gi-Oh! un juego de cartas en donde cada jugador elije cartas para su baraja, y encontr√© un dataset que contiene muchos, muchos decks‚Ä¶ en fin, no es necesario que sepas nada sobre el juego para seguir este tutorial. Lo importante es que me hice de un dataset de barajas, y quise averiguar cu√°les eran las cartas m√°s usadas del juego, supongamos que tenemos un par de listas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;card_ids&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;counts&lt;/code&gt; con los identificadores de las cartas m√°s comunes y la cantidad en la que aparecen en todas las barajas que encontr√©.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['83764719', '14558127', '24224830', '81439173', '73628505', '10045474', '32807846', '97268402', '24094653', '2295440']
[4649, 4406, 3634, 3169, 3076, 2739, 1695, 1682, 1676, 1539]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Que indica que el id &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;83764719&lt;/code&gt; aparece &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4649&lt;/code&gt; veces, el id &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;14558127&lt;/code&gt; lo hace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4406&lt;/code&gt; veces y as√≠ sucesivamente‚Ä¶&lt;/p&gt;

&lt;p&gt;Adem√°s, tengo un diccionario que me permite obtener m√°s informaci√≥n sobre determinada carta a partir de su identificador:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;card_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'83764719'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;83764719&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Monster Reborn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spell Card&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;desc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Target 1 monster in either GY; Special Summon it.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;image_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://storage.googleapis.com/ygoprodeck.com/pics/83764719.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;image_url_small&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://storage.googleapis.com/ygoprodeck.com/pics_small/83764719.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tenemos cosas como el nombre y el tipo de carta, esos atributos nos ser√°n de utilidad m√°s adelante.&lt;/p&gt;

&lt;h2 id=&quot;ahora-s√≠-a-graficar&quot;&gt;Ahora s√≠, a graficar&lt;/h2&gt;

&lt;p&gt;Tenemos ids de cartas y la cantidad de veces que aparecen, suena a un trabajo para‚Ä¶ ¬°una gr√°fica de barras! as√≠ es como la har√≠as usando &lt;em&gt;matplotlib&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/blogposts/mejorando-barplots/ugly.png&quot; alt=&quot;An ugly plot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tama√±o-de-la-gr√°fica&quot;&gt;Tama√±o de la gr√°fica&lt;/h3&gt;
&lt;p&gt;Adem√°s de las cr√≠ticas obvias (gr√°fica sin t√≠tulo, no hay etiquetas en los ejes‚Ä¶) ¬°la gr√°fica es horriblemente peque√±a! para arreglar esto, podemos jugar con los argumentos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dpi&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figsize&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/blogposts/mejorando-barplots/ugly-but-bigger.png&quot; alt=&quot;An ugly, but bigger plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Un poquito mejor, ¬øcierto? los argumentos que usamos nos ayudan a controlar dos cosas:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figsize&lt;/code&gt; controla el tama√±o de la gr√°fica en pulgadas; el primer valor de la tupla es el valor horizontal y el segundo es vertical&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dpi&lt;/code&gt; controla los &lt;em&gt;puntos por pulgada&lt;/em&gt; en nuestra gr√°fica, va de la mano con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figsize&lt;/code&gt;. El usar este argumento nos facilitar√° en demas√≠a el controlar el tama√±o del texto en nuestra gr√°fica.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;la-api-orientada-a-objetos&quot;&gt;La API orientada a objetos&lt;/h3&gt;
&lt;p&gt;Para permitirnos a√∫n m√°s personalizaci√≥n, tendremos que aventurarnos a usar la no tan conocida API orientada a objetos de &lt;em&gt;matplotlib&lt;/em&gt;, pero como ver√°s no es nada del otro mundo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;La gran diferencia es que no tenemos ya m√°s referencias a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt&lt;/code&gt; m√°s all√° de la primera que nos ayuda a crear una figura. La novedad, tambi√©n radica en que usamos el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gca&lt;/code&gt; (que proviene de &lt;em&gt;get current axes&lt;/em&gt;) para obtener el &lt;em&gt;axes&lt;/em&gt; que reside dentro de nuestra figura. Una vez hecho esto, ya podemos empezar a personalizar la gr√°fica:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Occurrences&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Most used cards across &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deck_count&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Yu-Gi-Oh! decks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/blogposts/mejorando-barplots/ugly-but-better.png&quot; alt=&quot;An ugly, but better plot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;entra-seaborn&quot;&gt;¬°Entra &lt;em&gt;Seaborn&lt;/em&gt;!&lt;/h3&gt;
&lt;p&gt;Muchas veces, si bien podemos lograr todos los resultados que queramos usando solamente matplotlib, hay ocasiones en las que podemos delegar este trabajo a otras librer√≠as como &lt;em&gt;Seaborn&lt;/em&gt;. Digamos que queremos mejorar a√∫n m√°s nuestra gr√°fica usando barras horizontales y los nombres de las cartas:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;card_names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card_id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Occurrences&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Most used cards across &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deck_count&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Yu-Gi-Oh! decks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La novedad es que estamos usando &lt;em&gt;seaborn&lt;/em&gt; (lo renombramos como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sns&lt;/code&gt; en nuestro script) y, algo muy importante, le estamos pasando el argumento &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt; para que haga uso del axis que nosotros queremos. El resultado es el siguiente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/blogposts/mejorando-barplots/improved.png&quot; alt=&quot;An improved, bigger plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se ve un poco mejor, pero la podemos hacer a√∫n m√°s atractiva.&lt;/p&gt;

&lt;h3 id=&quot;personalizaci√≥n-m√°xima&quot;&gt;Personalizaci√≥n m√°xima&lt;/h3&gt;
&lt;p&gt;Ahora podemos comenzar a crear nuestra gr√°fica:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;tipograf√≠as-personalizadas&quot;&gt;Tipograf√≠as personalizadas&lt;/h4&gt;
&lt;p&gt;Como se trata de una gr√°fica sobre cartas de Yu-Gi-Oh! decid√≠ usar las tipograf√≠as que se usan para las cartas:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# fm es matplotlib.font_manager
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_name_prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FontProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card_name.ttf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;card_effect_prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FontProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card_effect.ttf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;card_effect_prop_sm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FontProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card_effect.ttf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;card_number_prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FontProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card_number.ttf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fname&lt;/code&gt; es la ruta de la tipograf√≠a que vamos a usar, y los par√°metros &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;size&lt;/code&gt; tuve que averiguarlos a prueba y error (como casi todo en &lt;em&gt;matplotlib&lt;/em&gt;). Mantengamos las referencias ah√≠, m√°s adelante las vamos a usar.&lt;/p&gt;

&lt;h4 id=&quot;etiquetas-de-los-ejes&quot;&gt;Etiquetas de los ejes&lt;/h4&gt;

&lt;p&gt;Tengo la idea de poner los nombres de las cartas dentro de las barras, as√≠ que las podemos quitar las etiquetas del eje de las &lt;em&gt;y&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#ax.axes.get_yaxis().set_visible(False)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_yaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Agreguemos las etiquetas, esta vez usando las tipograf√≠as personalizadas que definimos anteriormente. Tambi√©n vamos a cambiarle la tipograf√≠a a los valores en el eje de las &lt;em&gt;x&lt;/em&gt; usando el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.get_xticklabels&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Card&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontproperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_number_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Occurrences&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontproperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_number_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_fontproperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_number_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;texto-dentro-de-las-barras&quot;&gt;Texto dentro de las barras&lt;/h4&gt;
&lt;p&gt;Cada una de las barras dentro de nuestra gr√°fica no es m√°s que una instancia de una clase llamada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib.patches.Rectangle&lt;/code&gt;, a los cuales podemos acceder mediante la propiedad &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patches&lt;/code&gt; de nuestros axes. Cada uno de estos &lt;em&gt;patches&lt;/em&gt; tiene diversas propiedades como su posici√≥n en [&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;], el color de relleno, entre otras.&lt;/p&gt;

&lt;p&gt;Nosotros nos aprovecharemos de tener acceso a estos &lt;em&gt;patches&lt;/em&gt; poner los nombres dentro de las barras usando el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text&lt;/code&gt; que ofrece nuestro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xy&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;card&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rect_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_facecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;card&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;font_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontproperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_name_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;pie-de-p√°gina&quot;&gt;Pie de p√°gina&lt;/h4&gt;
&lt;p&gt;A la hora de compartir una gr√°fica siempre es importante informar de d√≥nde obtuvimos la informaci√≥n, o tal vez una peque√±a nota de &lt;em&gt;copyright&lt;/em&gt; indicando que nosotros fuimos los creadores de esta, para este prop√≥sito podemos usar la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AnchoredText&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnchoredText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Data from decks built at ygoprodeck.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y el esperado resultado final es:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/blogposts/mejorando-barplots/beautiful.png&quot; alt=&quot;Beautiful&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y &lt;em&gt;voil√°&lt;/em&gt;, nuestra gr√°fica est√° lista para ser compartida con el mundo.&lt;/p&gt;

&lt;p&gt;Como siempre, comentarios y dudas son bienvenidos en mi cuenta de Twitter &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;. Esta vez todo el c√≥digo para reproducir lo que hicimos aqu√≠ est√° en este &lt;a href=&quot;https://www.kaggle.com/ioexception/las-cartas-m-s-usadas-de-yu-gi-oh&quot;&gt;notebook de Kaggle&lt;/a&gt; (si no sabes qu√© es Kaggle, puedes ver &lt;a href=&quot;https://www.youtube.com/watch?v=5yF-VeivtgU&quot;&gt;mi video sobre el tema&lt;/a&gt;).&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="python" />
      
        <category term="matplotlib" />
      
        <category term="seaborn" />
      

      
        <summary type="html">En esta ocasi√≥n les quiero hablar de c√≥mo mejorar sus gr√°ficos de barras con colores y fuentes personalizadas‚Ä¶ aunque me gustar√≠a que esta fuera una lecci√≥n sobre c√≥mo es que podemos sacar m√°s provecho de Matplotlib y herramientas (como Seaborn) que se construyen al rededor de esta poderosa librer√≠a.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Word2vec ilustrado</title>
      <link href="https://old.tacosdedatos.com/word-to-vec-ilustrado" rel="alternate" type="text/html" title="Word2vec ilustrado" />
      <published>2020-09-04T10:00:00+00:00</published>
      <updated>2020-09-04T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/word-to-vec-ilustrado</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/word-to-vec-ilustrado">&lt;p&gt;En esta ocasi√≥n les quiero hablar de otra forma de convertir texto a vectores, esta es distinta a las que hemos visto previamente ya que nos da como resultado un vector por cada token y cada uno de estos vectores es un vector denso.&lt;/p&gt;

&lt;p&gt;Esta vez les traigo no un post original, sino m√°s bien una traducci√≥n de un art√≠culo que me parece vale mucho la pena. El art√≠culo original es de Jay Alammar y se llama &lt;a href=&quot;http://jalammar.github.io/illustrated-word2vec/&quot;&gt;The Illustrated Word2vec&lt;/a&gt;:&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúHay en todas las cosas un ritmo que es parte de nuestro universo. Hay simetr√≠a, elegancia y gracia‚Ä¶ esas cualidades a las que se acoge el verdadero artista. Uno puede encontrar este ritmo en la sucesi√≥n de las estaciones, en la forma en que la arena modela una cresta, en las ramas de un arbusto creosota o en el dise√±o de sus hojas. 
Intentamos copiar este ritmo en nuestras vidas y en nuestra sociedad, buscando la medida y la cadencia que reconfortan. Y sin embargo, es posible ver un peligro en el descubrimiento de la perfecci√≥n √∫ltima. Est√° claro que el √∫ltimo esquema contiene en s√≠ mismo su propia fijeza. En esta perfecci√≥n, todo conduce hacia la muerte‚Äù ~ Frank Herbert. ‚ÄúDune‚Äù (1965)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Encuentro la idea de &lt;em&gt;embeddings&lt;/em&gt;* una de las m√°s fascinantes dentro del aprendizaje autom√°tico. Si alguna vez has usado &lt;em&gt;Siri&lt;/em&gt;, &lt;em&gt;Google Assistant&lt;/em&gt;, &lt;em&gt;Alexa&lt;/em&gt; o &lt;em&gt;Google Translate&lt;/em&gt;, o inclusive un tel√©fono con teclado que predice tu siguiente palabra, entonces seguramente te has beneficiado de esta idea que se a convertido en la clave de los modelos de Procesamiento de Lenguaje Natural (&lt;em&gt;NLP&lt;/em&gt;). En las √∫ltimas d√©cadas ha existido mucho desarrollo respecto a usar &lt;em&gt;embeddings&lt;/em&gt; para modelos neuronales (investigaciones recientes incluyen &lt;em&gt;embeddings&lt;/em&gt; contextualizados que llevan a modelos vanguardistas como &lt;a href=&quot;https://jalammar.github.io/illustrated-bert/&quot;&gt;BERT&lt;/a&gt; o GPT2).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Word2vec&lt;/strong&gt; es un m√©todo para crear &lt;em&gt;embeddings&lt;/em&gt; de forma eficiente que ha existido desde 2013. pero adem√°s de su utilidad para la creaci√≥n de estos &lt;em&gt;embeddings&lt;/em&gt;, algunos de sus conceptos han sido exitosamente empleados para crear modelos de recomendaci√≥n y para hacer sentido de datos secuenciales, inclusive en aplicaciones comerciales no relacionadas con lenguajes. Compa√±√≠as como &lt;a href=&quot;https://www.kdd.org/kdd2018/accepted-papers/view/real-time-personalization-using-embeddings-for-search-ranking-at-airbnb&quot;&gt;Airbnb&lt;/a&gt;, &lt;a href=&quot;https://www.kdd.org/kdd2018/accepted-papers/view/billion-scale-commodity-embedding-for-e-commerce-recommendation-in-alibaba&quot;&gt;Alibaba&lt;/a&gt;, &lt;a href=&quot;https://www.slideshare.net/AndySloane/machine-learning-spotify-madison-big-data-meetup&quot;&gt;Spotify&lt;/a&gt;, y &lt;a href=&quot;https://towardsdatascience.com/using-word2vec-for-music-recommendations-bb9649ac2484&quot;&gt;Anghami&lt;/a&gt; le han sacado provecho a esta brillante pieza del mundo del &lt;em&gt;NLP&lt;/em&gt; y la est√°n usando para potenciar una nueva clase de modelos de recomendaci√≥n.&lt;/p&gt;

&lt;p&gt;En este post, vamos a revisar el concepto de &lt;em&gt;embeddings&lt;/em&gt;, y c√≥mo es que se generan estos con la t√©cnica de &lt;em&gt;word2vec&lt;/em&gt;. Pero comencemos con un ejemplo para familiarizarnos con el uso de vectores para representar cosas. ¬øSab√≠as que una lista de cinco n√∫meros (es decir, un vector) puede representar mucho sobre tu personalidad?&lt;/p&gt;

&lt;h2 id=&quot;embeddings-de-personalidad-c√≥mo-eres&quot;&gt;&lt;em&gt;Embeddings&lt;/em&gt; de personalidad: ¬øc√≥mo eres?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúTe doy el camale√≥n del desierto, cuya habilidad para mezclarse con el fondo te dice todo lo que necesitas saber sobre las ra√≠ces de la ecolog√≠a y las bases de la identidad personal‚Äù ~ Hijos de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En una escala de 0 a 100, ¬øqu√© tan introvertido/extrovertido eres tu (donde 0 es introvertido, y 100 es extrovertido)? ¬øalguna vez has tomado un test de personalidad como MBTI ‚Äì o, mejor a√∫n, una prueba del &lt;a href=&quot;https://es.wikipedia.org/wiki/Modelo_de_los_cinco_grandes&quot;&gt;modelo de los cinco grandes&lt;/a&gt;? si no lo has hecho, este tipo de pruebas te hace una serie de preguntas y te califica en diferentes ejes, siendo la introversi√≥n o extraversi√≥n uno de ellos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/big-five-personality-traits-score.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Ejemplo de un resultado en una prueba del modelo de los cinco grandes. Este te puede decir mucho sobre ti mismo y ha mostrado tener habilidades predictivas en cuanto a √©xito &lt;a href=&quot;http://psychology.okstate.edu/faculty/jgrice/psyc4333/FiveFactor_GPAPaper.pdf&quot;&gt;acad√©mico&lt;/a&gt;, &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1744-6570.1999.tb00174.x&quot;&gt;personal&lt;/a&gt; y &lt;a href=&quot;https://www.massgeneral.org/psychiatry/assets/published_papers/soldz-1999.pdf&quot;&gt;profesional&lt;/a&gt;. &lt;a href=&quot;https://projects.fivethirtyeight.com/personality-quiz/&quot;&gt;Aqu√≠&lt;/a&gt; puedes calcular tus valores.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Imagina que obtuve 38/100 en el eje de introversi√≥n/extroversi√≥n. Lo podemos graficar as√≠:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/introversion-extraversion-100.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si colocamos los valores de -1 a 1:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/introversion-extraversion-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¬øQu√© tan bien crees conocer a una persona si sabes solo esta informaci√≥n sobre ella? No mucho, las personas son complejas. A√±adamos otra dimensi√≥n, la calificaci√≥n de otra de las caracter√≠sticas del test:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/two-traits-vector.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Podemos representar dos dimensiones como un punto en la gr√°fica, o mejor a√∫n, como un vector desde el origen a ese punto. Tenemos herramientas incre√≠bles que para trabajar con vectores que nos resultar√°n √∫tiles m√°s adelante.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;He ocultado qu√© caracter√≠sticas estamos graficando solamente para que nos acostumbremos a no saber qu√© representa cada dimensi√≥n ‚Äì aun asi, estamos obteniendo mucha informaci√≥n de la representaci√≥n vectorial de cada una de las personalidades.&lt;/p&gt;

&lt;p&gt;Ahora podemos decir que este vector representa parcialmente mi personalidad. La usabilidad de esta representaci√≥n es √∫til cuando quieres comparar otras dos personas conmigo. Digamos que me atropella un autob√∫s y debo ser reemplazado por alguien con una personalidad similar. Dada la siguiente figura, ¬øcu√°l de las dos personas es m√°s similar a mi?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/personality-two-persons.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando estamos trabajando con vectores, una forma com√∫n de calcular una medida de similitud es la &lt;a href=&quot;https://es.wikipedia.org/wiki/Similitud_coseno&quot;&gt;similitud coseno&lt;/a&gt; (o &lt;em&gt;cosine similarity&lt;/em&gt; que es su nombre en ingl√©s).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/cosine-similarity.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;span style=&quot;color: #70BF41;&quot;&gt;Person #1&lt;/span&gt; es m√°s similar a mi en cuanto a personalidad. Vectores que apuntan a la misma direcci√≥n (aunque la longitud tambi√©n tiene que ver) tienen una similitud coseno m√°s grande.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Aun asi, dos dimensiones no son suficientes para capturar informaci√≥n suficiente sobre qu√© tan diferentes dos personas son. D√©cadas de investigaci√≥n psicol√≥gica han llevado a que existen 5 caracter√≠sticas (y muchas sub-caracter√≠sticas). As√≠ que vamos a usar todas en nuestras comparaciones:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/big-five-vectors.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El problema con estas cinco dimensiones es que hemos perdido la habilidad de graficar esas flechitas tan bonitas en dos dimensiones. Este es un obst√°culo com√∫n en el aprendizaje autom√°tico en el que constantemente tenemos que pensar en espacios de grandes dimensiones. La ventaja que teneos es que la similitud coseno a√∫n funciona sin importar las dimensiones:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/embeddings-cosine-personality.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;La similitud coseno funciona sin importar el n√∫mero de dimensiones. Estas son mejores calificaciones porque han sido calculadas en una representaci√≥n con mayor resoluci√≥n de las cosas que est√°n siendo comparadas.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Para concluir esta secci√≥n, quiero que nos quedemos con dos ideas principales:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Podemos representar personas (y cosas) como vectores de n√∫meros (lo que es perfecto para las computadoras).&lt;/li&gt;
  &lt;li&gt;Podemos comparar f√°cilmente qu√© tan similares son los vectores entre s√≠.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/section-1-takeaway-vectors-cosine.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;embeddings-de-palabras&quot;&gt;&lt;em&gt;Embeddings&lt;/em&gt; de palabras&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúEl don de las palabras es el don del enga√±o y la ilusi√≥n‚Äù ~ Hijos de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Entendiendo esto, podemos proceder a ver ejemplos de vectores-palabra entrenados (tambi√©n conocidos como &lt;em&gt;embeddings&lt;/em&gt;) y ver algunas de sus propiedades interesantes.&lt;/p&gt;

&lt;p&gt;Este es un &lt;em&gt;embedding&lt;/em&gt; para la palabra &lt;em&gt;‚Äúking‚Äù&lt;/em&gt; ‚Äìrey, en ingl√©s‚Äì (GloVe vector entrenado en Wikipedia):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ 0.50451 , 0.68607 , -0.59517 , -0.022801, 0.60046 , -0.13498 , -0.08813 , 0.47377 , -0.61798 , -0.31012 , -0.076666, 1.493 , -0.034189, -0.98173 , 0.68229 , 0.81722 , -0.51874 , -0.31503 , -0.55809 , 0.66421 , 0.1961 , -0.13495 , -0.11476 , -0.30344 , 0.41177 , -2.223 , -1.0756 , -1.0783 , -0.34354 , 0.33505 , 1.9927 , -0.04234 , -0.64319 , 0.71125 , 0.49159 , 0.16754 , 0.34344 , -0.25663 , -0.8523 , 0.1661 , 0.40102 , 1.1685 , -1.0137 , -0.21585 , -0.15155 , 0.78321 , -0.91241 , -1.6106 , -0.64426 , -0.51042 ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Es una lista de 50 n√∫meros. No podemos decir mucho si solamente vemos estos n√∫meros.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/king-white-embedding.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A√±adamos colores a las celdas basados en sus valores (rojo si est√°n cerca de 2, blanco si est√°n cerca de 0 y azul si est√°n cerca de -2):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/king-colored-embedding.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De ahora en adelante, vamos a ignorar los n√∫meros y concentrarnos solo en los colores que indican los valores de las celdas. Comparemos &lt;em&gt;‚Äúking‚Äù&lt;/em&gt; contra otras palabras:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/king-man-woman-embedding.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¬øVes c√≥mo las palabras &lt;em&gt;‚Äúman‚Äù&lt;/em&gt; y &lt;em&gt;‚Äúwoman‚Äù&lt;/em&gt; son m√°s similares entre s√≠ que cualquiera de ellas con &lt;em&gt;‚Äúking‚Äù&lt;/em&gt;? Esto nos dice algo. Estas representaciones vectoriales capturan un poco la informaci√≥n/significado/asociaciones de estas palabras.&lt;/p&gt;

&lt;p&gt;Aqu√≠ hay otros ejemplos (compara las columnas verticalmente, buscando columas con colores similares):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jalammar.github.io/images/word2vec/queen-woman-girl-embeddings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Algunas cosas para destacar:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Hay una columna roja que coincide en todas las palabras. Las palabras son similares en esa dimensi√≥n (recuerda que no sabemos lo que significa cada dimensi√≥n).&lt;/li&gt;
  &lt;li&gt;Puedes ver c√≥mo &lt;em&gt;‚Äúwoman‚Äù&lt;/em&gt; y &lt;em&gt;‚Äúgirl‚Äù&lt;/em&gt; son similares en un mont√≥n de lugares. Lo mismo sucede con &lt;em&gt;‚Äúman‚Äù&lt;/em&gt; y &lt;em&gt;‚Äúboy‚Äù&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;‚Äúboy‚Äù&lt;/em&gt; y &lt;em&gt;‚Äúgirl‚Äù&lt;/em&gt; tambi√©n tienen lugares en donde coinciden, pero son lugares diferentes a &lt;em&gt;‚Äúwoman‚Äù&lt;/em&gt; o &lt;em&gt;‚Äúman‚Äù&lt;/em&gt;. ¬øSer√° que estas est√©n codificando una vaga definici√≥n de juventud? es posible.&lt;/li&gt;
  &lt;li&gt;Todas las palabras, excepto la √∫ltima representan personas. Agregu√©, por ejemplo, un objeto (&lt;em&gt;‚Äúwater‚Äù&lt;/em&gt;) para mostrar las diferencias entre categor√≠as. Por ejemplo, ¬øves esa columna azul fuerte a la derecha que se aten√∫a cuando llegamos al &lt;em&gt;embedding&lt;/em&gt; de &lt;em&gt;‚Äúwater‚Äù&lt;/em&gt;?&lt;/li&gt;
  &lt;li&gt;Hay otros lugares en donde &lt;em&gt;‚Äúking‚Äù&lt;/em&gt; y &lt;em&gt;‚Äúqueen‚Äù&lt;/em&gt; son diferentes de todas las dem√°s, ¬øser√° que estas diferencias codifiquen un concepto vago de realeza?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;analog√≠as&quot;&gt;Analog√≠as&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúLas palabras pueden llevar todo el peso que queramos. Todo lo que se requiere es un acuerdo tradici√≥n a partir de la cual  construir‚Äù ~ Dios emperador de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Los ejemplos m√°s usados que muestran una de las caracter√≠sticas m√°s incre√≠bles de los &lt;em&gt;embeddings&lt;/em&gt; es el concepto de analog√≠as. Podemos sumar y restar &lt;em&gt;embeddings&lt;/em&gt; y llegar a resultados interesantes. El ejemplo m√°s famoso es la f√≥rmula &lt;em&gt;‚Äúking‚Äù&lt;/em&gt; - &lt;em&gt;‚Äúman‚Äù&lt;/em&gt; + &lt;em&gt;‚Äúwoman‚Äù&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jalammar.github.io/images/word2vec/king-man+woman-gensim.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Usando la biblioteca &lt;a href=&quot;https://radimrehurek.com/gensim/&quot;&gt;Gensim&lt;/a&gt; de Python, podemos sumar y restar vectores, y encontrar las palabras m√°s similares al vector resultante. La imagen muestra una lista de las palabras m√°s similares, cada una con su similitud coseno.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Podemos visualizar esta analog√≠a como lo hemos hecho anteriormente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jalammar.github.io/images/word2vec/king-analogy-viz.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;El vector resultante de &lt;em&gt;‚Äúking-man+woman‚Äù&lt;/em&gt; no coincide exactamente con &lt;em&gt;‚Äúqueen‚Äù&lt;/em&gt; es la m√°s cercana de las 400,000 que la contiene este &lt;em&gt;dataset&lt;/em&gt;.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Ahora que hemos revisado los &lt;em&gt;embeddings&lt;/em&gt;, aprendamos m√°s acerca del proceso para obtenerlos. Pero antes de que lleguemos a &lt;em&gt;word2vec&lt;/em&gt;, necesitamos conocer a su padre conceptual: los modelos de lenguaje neuronales.&lt;/p&gt;

&lt;h2 id=&quot;modelando-lenguajes&quot;&gt;Modelando lenguajes&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúEl profeta no se distrae con ilusiones del pasado, presente y futuro. &lt;strong&gt;La fijeza del lenguaje determina tales distinciones lineales.&lt;/strong&gt; Los profetas sostienen la llave de la cerradura en un idioma. 
Este no es un universo mec√°nico. La progresi√≥n lineal de los eventos la impone el observador. ¬øCausa y efecto? No es eso para nada. &lt;strong&gt;El profeta pronuncia palabras fat√≠dicas.&lt;/strong&gt; Vislumbras algo ‚Äúdestinado a ocurrir‚Äù pero el instante prof√©tico libera algo de portento y poder infinitos. El universo sufre un cambio fantasmal‚Äù ~ Dios emperador de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si uno quisiera un ejemplo de una aplicaci√≥n que usa &lt;em&gt;NLP&lt;/em&gt;, uno de los mejores ser√≠a la predicci√≥n de la pr√≥xima palabra en el teclado de un tel√©fono. Es una caracter√≠stica que miles de millones de personas usan cientos de veces al d√≠a.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/swiftkey-keyboard.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La predicci√≥n de la pr√≥xima palabra es una tarea que puede llevarse a cabo usando un &lt;em&gt;modelo de lenguage&lt;/em&gt; (&lt;em&gt;language model&lt;/em&gt;, en ingl√©s). Un modelo de lenguaje puede tomar una lista de palabras (digamos, dos), y tratar de predecir cu√°l es la que le seguir√≠a.&lt;/p&gt;

&lt;p&gt;En la captura de pantalla de arriba, podemos pensar que el modelo tom√≥ estas dos palabras en color verde (&lt;span style=&quot;color: #70BF41;&quot;&gt;Thou&lt;/span&gt;, &lt;span style=&quot;color: #70BF41;&quot;&gt;shalt&lt;/span&gt;) y regresa un conjunto de sugerencias (‚Äúnot‚Äù es la que ten√≠a la mayor probabilidad):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/thou-shalt-_.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Puedes pensar en el modelo como una caja negra:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/language_model_blackbox.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero en la pr√°ctica, el modelo no solamente regresa como resultado una sola palabra. En realidad, entrega las probabilidades para todas las palabras que ‚Äúconoce‚Äù (el conjunto de todas las palabras que conoce se llama vocabulario, que pueden ir desde unas cuantas miles hasta millones de palabras). Es la responsabilidad del teclado encontrar las palabras con mayor probabilidad y presentarlas al usuario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/language_model_blackbox_output_vector.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Los resultados de un modelo de lenguaje son probabilidades sobre todas las palabras que el modelo ‚Äúconoce‚Äù. En la imagen nos referimos a la probabilidad como porcentaje, pero ese 40% en realidad vale 0.4 en nuestro vector de salida.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Despu√©s de ser entrenado, los primeros modelos de lenguaje (&lt;a href=&quot;http://www.jmlr.org/papers/volume3/bengio03a/bengio03a.pdf&quot;&gt;Bengio 2003&lt;/a&gt;) calculaban la predicci√≥n en tres pasos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/neural-language-model-prediction.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El primer paso es el m√°s relevante para nosotros porque en este post estamos hablando sobre los &lt;em&gt;embeddings&lt;/em&gt;. Uno de los resultados del proceso de entrenamiento es una matriz que contiene un &lt;em&gt;embedding&lt;/em&gt; por cada uno de los tokens en nuestro vocabulario. Cuando estamos prediciendo, simplemente buscamos los &lt;em&gt;embeddings&lt;/em&gt; de los tokens de entrad ay calculamos la predicci√≥n:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/neural-language-model-embedding.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a aprender c√≥mo es que esta matriz de &lt;em&gt;embeddings&lt;/em&gt; es creada.&lt;/p&gt;

&lt;h2 id=&quot;entrenamiento-de-modelos-de-lenguaje&quot;&gt;Entrenamiento de modelos de lenguaje&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúUn proceso no se puede entender deteni√©ndolo. La comprensi√≥n debe moverse con el flujo del proceso, debe unirse y fluir con √©l.‚Äù ~Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Los modelos de lenguaje tienen una gran ventaja sobre otros modelos de &lt;em&gt;machine learning&lt;/em&gt;. Esa ventaja es que podemos entrenarlos usando texto ‚Äì del cual tenemos mucho. Piensa en todos los libros, art√≠culos, y otras formas de textos a nuestro al rededor. En contraste con otros modelos de aprendizaje autom√°tico que necesitan que la los datos sean preparados (y a veces obtenidos) espec√≠ficamente para ellos.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúConocer√°s una palabra por sus la compa√±√≠a que mantiene alrededor‚Äù ~ J.R. Firth&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Las palabras obtienen sus &lt;em&gt;embeddings&lt;/em&gt; a partir de las palabras que aparecen a su alrededor. Esto funciona de la siguiente manera:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Obtenemos un mont√≥n de texto (digamos, todos los art√≠culos de Wikipedia), luego&lt;/li&gt;
  &lt;li&gt;tomamos una ventana (digamos, de tres palabras) que movemos sobre todo el texto,&lt;/li&gt;
  &lt;li&gt;Esta ventana genera nuestros ejemplos para el entrenamiento del modelo:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/wikipedia-sliding-window.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En tanto esta ventana se desliza, nosotros (virtualmente) generamos un &lt;em&gt;dataset&lt;/em&gt; que usaremos para entrenar el modelo. Para ver c√≥mo es que esto funciona, veamos c√≥mo funciona el proceso para la siguiente frase:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúThou shalt not make a machine in the likeness of a human mind‚Äù ~Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cuando empezamos, la ventana est√° en las tres primeras palabras de la oraci√≥n:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/lm-sliding-window.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tomamos las dos palabras como &lt;em&gt;features&lt;/em&gt;, y la tercera como la etiqueta a predecir:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/lm-sliding-window-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Luego entonces deslizamos la ventana a la siguiente posici√≥n para generar un segundo ejemplo de entrenamiento:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/lm-sliding-window-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y de pronto tendremos un gran &lt;em&gt;dataset&lt;/em&gt; de palabras que suelen aparecer despu√©s de otro par:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/lm-sliding-window-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En la pr√°ctica, los modelos suelen ser entrenados mientras esta ventana se va deslizando, sin embargo, siento que es m√°s claro separar l√≥gicamente la etapa de generaci√≥n del &lt;em&gt;dataset&lt;/em&gt; de la etapa de entrenamiento. Adem√°s de modelos basados en redes neuronales, existe una t√©cnica conocida como &lt;em&gt;n-grams&lt;/em&gt; que es tambi√©n usada com√∫nmente para entrenar modelos (mira el cap√≠tulo 3 de &lt;a href=&quot;http://web.stanford.edu/~jurafsky/slp3/&quot;&gt;&lt;em&gt;Speech and Language Processing&lt;/em&gt;&lt;/a&gt;). para ver c√≥mo es que este cambio de &lt;em&gt;n-grams&lt;/em&gt; a modelos neuronales se refleja en productos reales, revisa &lt;a href=&quot;https://blog.swiftkey.com/neural-networks-a-meaningful-leap-for-mobile-typing/&quot;&gt;este post de Swiftkey&lt;/a&gt; mi teclado favorito para Android, introduciendo su modelo neuronal de lenguaje y compar√°ndolo con su previo modelo basado en &lt;em&gt;n-grams&lt;/em&gt;. me gusta este ejemplo porque muestra c√≥mo las propiedades algor√≠tmicas de los &lt;em&gt;embeddings&lt;/em&gt; se pueden describir en lenguaje de marketing.&lt;/p&gt;

&lt;h3 id=&quot;mira-hacia-ambos-lados&quot;&gt;Mira hacia ambos lados&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúLa paradoja es un indicador que te dice que mires m√°s all√°. Si las paradojas te molestan, eso delata tu profundo deseo de absolutos. El relativista trata una paradoja simplemente como interesante, quiz√°s divertida o incluso, un pensamiento terrible, educativo‚Äù¬†~ Dios emperador de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sabiendo de lo que hablamos anteriormente en este post, completa la oraci√≥n&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/jay_was_hit_by_a_.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El contexto que te he dado aqu√≠ son 5 palabras antes del espacio en blanco. Estoy seguro que la mayor√≠a de las personas elegir√≠an la palabra &lt;em&gt;‚Äúbus‚Äù&lt;/em&gt; como soluci√≥n. Pero qu√© suceder√≠a si te doy un poco m√°s de informaci√≥n ‚Äì una palabra despu√©s del espacio en blanco, ¬øcambiar√≠a tu respuesta?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/jay_was_hit_by_a_.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto cambia completamente lo que deber√≠a ir en el espacio en blanco, la palabra &lt;em&gt;‚Äúred‚Äù&lt;/em&gt; es ahora la que tiene mayor sentido de ser elegida. Lo que hemos aprendido de esto es que tanto las palabras previas como las siguientes a una palabra determinada contienen un alto valor sobre esta palabra determinada. Resulta que tomar en cuenta ambas direcciones (palabras a la izquierda y derecha de la que estamos adivinando) nos lleva a tener mejor &lt;em&gt;embeddings&lt;/em&gt;. Veamos c√≥mo es que podemos tomar en cuenta esto al momento de entrenar nuestro modelo.&lt;/p&gt;

&lt;h2 id=&quot;skipgram&quot;&gt;&lt;em&gt;Skipgram&lt;/em&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúLa inteligencia se arriesga con datos limitados en un campo donde los errores no solo son posibles sino tambi√©n necesarios.‚Äù ~Chapterhouse: Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En lugar de solamente mirar dos palabras antes de nuestra palabra objetivo, podemos tambi√©n ver dos palabras despu√©s:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/continuous-bag-of-words-example.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si hacemos esto, el &lt;em&gt;dataset&lt;/em&gt; que estamos construyendo virtualmente para entrenar el modelo se ver√≠a as√≠:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/continuous-bag-of-words-dataset.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta arquitectura es conocida como &lt;em&gt;Continuous Bag of Words&lt;/em&gt; y es descrita en uno de los &lt;a href=&quot;https://arxiv.org/pdf/1301.3781.pdf&quot;&gt;art√≠culos de word2vec&lt;/a&gt;. Hay otra arquitectura que entreg√≥ grandes resultados haciendo las cosas un poco diferente.&lt;/p&gt;

&lt;p&gt;El lugar de ‚Äúadivinar‚Äù una palabra a partir de su contexto (las palabras antes y despu√©s de ella), esta otra arquitectura trata de predecir las palabras vecinas a partir de una palabra determinada. Podemos imaginar que la ventana se desliza sobre el texto de entrenamiento as√≠:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;La palabra en la casilla verde ser√° tratada como la palabra de entrada y cada una de las casillas rosas ser√°n tratadas como posibles resultados.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Las casillas rosas est√°n marcadas con diferentes tonalidades porque la ventana deslizante en realidad crea cuatro ejemplos diferentes en nuestro dataset:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-samples.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este m√©todo es conocido como la arquitectura &lt;em&gt;skipgram&lt;/em&gt;. Podemos visualizar la ventana deslizante haciendo algo as√≠:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto a√±adir√≠a cuatro ejemplos a nuestro dataset de entrenamiento:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Luego entonces podemos deslizar la ventana a su siguiente posici√≥n:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto genera otros cuatro ejemplos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Un par de posiciones m√°s adelante tenemos muchos m√°s ejemplos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-sliding-window-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;revisando-el-proceso-de-entrenamiento&quot;&gt;Revisando el proceso de entrenamiento&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúMuad‚ÄôDib aprendi√≥ r√°pidamente porque su primer entrenamiento fue sobre c√≥mo aprender. Y la primera lecci√≥n de todas fue la confianza b√°sica que pod√≠a aprender. Es impactante descubrir cu√°ntas personas no creen que puedan aprender y cu√°ntas m√°s creen que aprender es dif√≠cil.‚Äù ~ Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora que ya tenemos nuestro &lt;em&gt;dataset&lt;/em&gt; creado a partir del modelo &lt;em&gt;skipgram&lt;/em&gt;, echemos un vistazo a c√≥mo lo podemos usar para entrenar un modelo neuronal b√°sico de lenguaje que predice las palabras vecinas a otra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-language-model-training.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Comencemos por el primer ejemplo en nuestro &lt;em&gt;dataset&lt;/em&gt;. Tomando la primer entrada y d√°ndosela al modelo que a√∫n no est√° entrenado pidi√©ndole su predicci√≥n para la siguiente palabra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-language-model-training-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El modelo ejecuta los tres pasos definidos arriba y entrega un vector de predicci√≥n (en donde cada palabra en su vocabulario recibe una probabilidad). Dado que el modelo no est√° entrenado a√∫n, sus predicciones son incorrectas en esta etapa; eso est√° bien. Nosotros sabemos qu√© palabra debi√≥ haber predicho ‚Äì la palabra (o ‚Äúetiqueta‚Äù) en la fila que estamos usando para entrenar el modelo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-language-model-training-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;El vector objetivo (&lt;em&gt;‚Äútarget vector‚Äù&lt;/em&gt;) es aquel en donde la verdadera palabra esperada tiene una probabilidad de 1 mientras que cualquier otra tienen probabilidad 0.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;¬øQu√© tan lejos estuvo el modelo? para saber esto, restamos los dos vectores (el valor esperado menos el valor predecido) lo cual nos va a dar un vector ‚Äúerror‚Äù:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-language-model-training-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este vector ‚Äúerror‚Äù puede ser usado para actualizar el modelo para que, la siguiente vez que se le pregunte, sea m√°s probable que ‚Äúadivine‚Äù &lt;span style=&quot;color: #e91e63;&quot;&gt;thou&lt;/span&gt; cuando recibe &lt;span style=&quot;color: #4caf50;&quot;&gt;not&lt;/span&gt; como entrada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-language-model-training-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y as√≠ concluye el primer paso del entrenamiento. Procedemos a ejecutar el mismo proceso con el siguiente ejemplo en nuestro dataset, y el siguiente, y el siguiente y as√≠ hasta que hayamos terminado de cubrir todos los ejemplos de nuestro &lt;em&gt;dataset&lt;/em&gt;, con eso se cubre lo que en &lt;em&gt;machine learning&lt;/em&gt; se conoce como una &lt;strong&gt;√©poca de entrenamiento&lt;/strong&gt;. Despu√©s repetimos el mismo proceso por un n√∫mero de √©pocas y finalmente podemos extraer la matriz de &lt;em&gt;embeddings&lt;/em&gt; (que son los par√°metros internos de nuestro modelo neuronal) y usarla para cualquier otra aplicaci√≥n.&lt;/p&gt;

&lt;p&gt;Mientras qu√© hemos logrado entender el proceso, a√∫n no llegamos a c√≥mo es que &lt;em&gt;word2vec&lt;/em&gt; fue entrenado en realidad. Nos faltan un par de ideas claves.&lt;/p&gt;

&lt;h2 id=&quot;sampleo-negativo&quot;&gt;Sampleo negativo&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúIntentar comprender a Muad‚ÄôDib sin comprender a sus enemigos mortales, los Harkonnen, es intentar ver la Verdad sin conocer la Falsedad. Es el intento de ver la Luz sin conocer la Oscuridad. No puede ser.‚Äù ~ Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recordemos los tres pasos de c√≥mo es que este modelo neuronal calcula su predicci√≥n:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/language-model-expensive.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este tercer paso es muy costoso desde un punto de vista computacional ‚Äì especialmente sabiendo que tenemos que hacerlo una vez por cada ejemplo en nuestro dataset (que f√°cilmente ser√° millones de veces). Necesitamos hacer algo para mejorar el desempe√±o.&lt;/p&gt;

&lt;p&gt;Una forma de hacerlo es dividiendo nuestro objetivo en dos etapas:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Generar &lt;em&gt;embeddings&lt;/em&gt; de alta calidad (sin preocuparnos por predecir la siguiente palabra)&lt;/li&gt;
  &lt;li&gt;Usar estos &lt;em&gt;embeddings&lt;/em&gt; para entrenar un modelo de lenguaje (para ahora si, predecir la siguiente palabra)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nos vamos a enfocar en el paso 1, ya que este post se trata de &lt;em&gt;embeddings&lt;/em&gt;. Para generar unos de alta calidad mientras que usamos un modelo de alto desempe√±o podemos cambiar la funcionalidad del modelo de predecir la siguiente palabra:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/predict-neighboring-word.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A uno que tome las dos palabras (la de entrada y la que ser√≠a de salida) y regrese una medida indicando si estas palabras son vecinas o no (0 para ‚Äúno vecinas‚Äù, 1 para ‚Äúvecinas‚Äù):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/are-the-words-neighbors.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este simple cambio tambi√©n significa que podemos cambiar nuestro modelo de salidas de m√∫ltiples salidas a un modelo de regresi√≥n lineal ‚Äì que se convierte en uno m√°s sencillo y f√°cil de entrenar.&lt;/p&gt;

&lt;p&gt;Este cambio tambi√©n requiere que nosotros cambiemos la estructura de nuestro &lt;em&gt;dataset&lt;/em&gt; ‚Äì lo que era antes nuestra etiqueta ahora es otra entrada al modelo, y el valor a predecir es 0 o 1. Por ahora todos ser√°n 1 puesto que todas nuestras palabras son ‚Äúvecinas‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-dataset.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este problema puede ser resuelto a una velocidad impresionante ‚Äì procesando millones de ejemplos en minutos; sin embargo, existe un peque√±o problema que debemos solucionar. Si todos nuestros ejemplos son positivos (es decir, etiqueta 1), nos estamos exponiendo a que nuestro modelo se pase de listillo y siempre regrese 1 como respuesta ‚Äì logrando 100% de precisi√≥n pero sin aprender nada (y en el proceso generar &lt;em&gt;embeddings&lt;/em&gt; que no sirven).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-smartass-model.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para resolver esto, necesitamos incluir &lt;em&gt;ejemplos negativos&lt;/em&gt; en nuestro &lt;em&gt;dataset&lt;/em&gt; ‚Äì ejemplos de palabras que no tienen relaci√≥n y para las cuales nuestro modelo debe regresar 0 como predicci√≥n. Con eso tenemos ahora un verdadero reto para el cual nuestro modelo tiene que trabajar para resolver, sin embargo este proceso sigue siendo r√°pido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-negative-sampling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Para cada ejemplo en nuestro &lt;em&gt;dataset&lt;/em&gt;, a√±adimos un ejemplo negativo. Estos tienen la misma palabra de ‚Äúentrada‚Äù y 0 como etiqueta.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Pero, ¬øqu√© colocamos como palabras de ‚Äúsalida‚Äù? pues podemos elegir palabras de nuestro vocabulario aleatoriamente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-negative-sampling-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta idea est√° inspirada por &lt;a href=&quot;http://proceedings.mlr.press/v9/gutmann10a/gutmann10a.pdf&quot;&gt;&lt;em&gt;noise-constrative estimation&lt;/em&gt;&lt;/a&gt;. Nosotros estamos contrastando la verdadera se√±al (los ejemplos positivos de palabras vecinas) con ruido (los ejemplos de palabras que no son vecinas elegidos aleatoriamente). Esto representa un excelente balance entre eficiencia computacional y estad√≠stica.&lt;/p&gt;

&lt;h2 id=&quot;skipgram-con-sampleo-negativo&quot;&gt;&lt;em&gt;Skipgram&lt;/em&gt; con sampleo negativo&lt;/h2&gt;

&lt;p&gt;Ahora hemos cubierto dos de las ideas centrales en &lt;em&gt;word2vec&lt;/em&gt;: en conjunto son llamadas &lt;em&gt;skipgram&lt;/em&gt; con sampleo negativo (*Skipgram with Negative Sampling, SGNS)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/skipgram-with-negative-sampling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;proceso-de-entrenamiento-de-word2vec&quot;&gt;Proceso de entrenamiento de &lt;em&gt;Word2vec&lt;/em&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúLa computadora no puede anticipar todos los problemas de importancia para los humanos. Es la diferencia entre bits en serie y un continuo ininterrumpido. Nosotros tenemos este; las m√°quinas se limitan al otro.‚Äù ~ Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Antes de que el proceso de entrenamiento comience, tenemos que pre-procesar el texto que vamos a usar para entrenar el modelo. Por ejemplo, determinamos el tama√±o de nuestro vocabulario (llamaremos a este valor &lt;span style=&quot;color:#ffa000;&quot;&gt;vocab_size&lt;/span&gt;, y digamos que su valor es 10,000) y qu√© palabras pertenecen a este.&lt;/p&gt;

&lt;p&gt;Al principio de la face de entrenamiento creamos dos matrices ‚Äì una de &lt;span style=&quot;color: #4caf50;&quot;&gt;Embedding&lt;/span&gt; y otra de &lt;span style=&quot;color: #9c27b0;&quot;&gt;Contexto&lt;/span&gt;. Estas dos matrices tienen un vector (&lt;em&gt;embedding&lt;/em&gt;) para cada palabra en el vocabulario, es decir &lt;span style=&quot;color:#ffa000;&quot;&gt;vocab_size&lt;/span&gt; es el tama√±o de una de sus dimensiones. La segunda dimensi√≥n es qu√© tan largo queremos que el &lt;em&gt;embedding&lt;/em&gt; sea (llamemos a este par√°metro &lt;span style=&quot;color: #ff6f00;&quot;&gt;embedding_size&lt;/span&gt;), 300 es un valor com√∫n, aunque anteriormente vimos un ejemplo de 50.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-embedding-context-matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando el proceso de entrenamiento comienza, rellenamos estas matrices con valores aleatorios. En cada paso de entrenamiento, tomamos un ejemplo positivo y su correspondiente negativo. Ve√°moslo con el primer grupo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-example.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora tenemos cuatro palabras: la de entrada &lt;span style=&quot;color: #4caf50;&quot;&gt;not&lt;/span&gt; y la de salida o contexto &lt;span style=&quot;color: #9c27b0;&quot;&gt;thou&lt;/span&gt; (que es su vecina). Adem√°s, tenemos &lt;span style=&quot;color: #9c27b0;&quot;&gt;aaron&lt;/span&gt; y &lt;span style=&quot;color: #9c27b0;&quot;&gt;taco&lt;/span&gt; como ejemplos negativos. Con esto en mente, ubicamos sus &lt;em&gt;embeddings&lt;/em&gt;: para la palabra de entrada, buscamos en la matriz &lt;span style=&quot;color: #4caf50;&quot;&gt;Embedding&lt;/span&gt; mientras que para las palabras ‚Äúcontexto‚Äù los buscamos en la matriz &lt;span style=&quot;color: #9c27b0;&quot;&gt;Contexto&lt;/span&gt; (a pesar de que ambas matrices tienen un &lt;em&gt;embedding&lt;/em&gt; para cada palabra en nuestro vocabulario).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-lookup-embeddings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despu√©s, tomamos el producto punto (&lt;em&gt;dot product&lt;/em&gt;) del &lt;em&gt;embedding&lt;/em&gt; de entrada con los &lt;em&gt;embeddings&lt;/em&gt; contexto. En cada caso, este producto punto resultar√° en un n√∫mero que indica la similtud entre estas dos palabras:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-dot-product.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Necesitamos una forma de convertir estos valores en algo que parezca probabilidades ‚Äì necesitamos que todas sean positivas y con valores entre 0 y 1. Este es un buen lugar para usar &lt;a href=&quot;https://jalammar.github.io/feedforward-neural-networks-visual-interactive/#sigmoid-visualization&quot;&gt;&lt;em&gt;sigmoid&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-dot-product-sigmoid.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora podemos tratar la salida de la operaci√≥n &lt;em&gt;sigmoid&lt;/em&gt; como la salida del modelo para estos ejemplos. Puedes ver que &lt;span style=&quot;color: #9c27b0;&quot;&gt;taco&lt;/span&gt; tiene el valor mayor mientras que &lt;span style=&quot;color: #9c27b0;&quot;&gt;aaron&lt;/span&gt; el menor, ambos antes y despu√©s de la operaci√≥n &lt;em&gt;sigmoid&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Una vez que el modelo no entrenado ha hecho una predicci√≥n, y sabiendo que tenemos un resultado correcto contra el cual comparar, vamos a calcular cu√°l fue el error en las predicciones del modelo. Para hacer eso, basta con restar los valores obtenidos de &lt;em&gt;sigmoid&lt;/em&gt; contra el valor de salida verdadero (&lt;em&gt;target&lt;/em&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aqu√≠ es donde viene la parte del &lt;em&gt;learning&lt;/em&gt; en &lt;em&gt;machine learning&lt;/em&gt;. Una vez que calculamos el error, podemos usarlo para ajustar los embeddings de nuestrass palabras, para que la pr√≥xima vez que necesitemos una predicci√≥n, los valores predecidos sean m√°s parecidos a los valores esperados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-update.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con esto concluye un primer paso de entrenamiento. Una vez concluido, terminamos con &lt;em&gt;embeddings&lt;/em&gt; un poquito mejores para las palabras involucradas en √©l (&lt;span style=&quot;color: #4caf50;&quot;&gt;not&lt;/span&gt;, &lt;span style=&quot;color: #9c27b0;&quot;&gt;thou&lt;/span&gt;, &lt;span style=&quot;color: #9c27b0;&quot;&gt;aaron&lt;/span&gt; y &lt;span style=&quot;color: #9c27b0;&quot;&gt;taco&lt;/span&gt;). Ahora si, podemos pasar al siguiente paso, es decir, el siguiente ejemplo positivo y sus correspondientes negativos para ejecutar el proceso nuevamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-training-example-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Los &lt;em&gt;embeddings&lt;/em&gt; seguir√°n mejorando mientras iteramos sobre todo nuestro &lt;em&gt;dataset&lt;/em&gt;. En cualquier momento podemos detener el proceso de entrenamiento, descartar la matriz &lt;span style=&quot;color: #9c27b0;&quot;&gt;Contexto&lt;/span&gt; y usar los &lt;em&gt;embeddings&lt;/em&gt; en la matriz &lt;span style=&quot;color: #4caf50;&quot;&gt;Embedding&lt;/span&gt; para cualquier otra tarea.&lt;/p&gt;

&lt;h2 id=&quot;tama√±o-de-ventana-y-n√∫mero-de-ejemplos-negativos&quot;&gt;Tama√±o de ventana y n√∫mero de ejemplos negativos&lt;/h2&gt;

&lt;p&gt;Hay dos h√≠per par√°metros claves en el proceso de entrenamiento de &lt;em&gt;word2vec&lt;/em&gt;, estos son el tama√±o de la ventana y el n√∫mero de ejemplos negativos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-window-size.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Diferentes tareas se benefician de diferentes tama√±os de ventana. Una &lt;a href=&quot;https://youtu.be/tAxrlAVw-Tk?t=648&quot;&gt;heur√≠stica&lt;/a&gt; que podemos emplear es que tama√±os de ventana peque√±os (2-15) llevan a &lt;em&gt;embeddings&lt;/em&gt; donde altos valores de similitud indican que las palabras son intercambiables (toma en cuenta que los ant√≥nimos suelen ser intercambiables si solo nos fijamos en las palabras que los rodean ‚Äì por ejemplo, ‚Äúbueno‚Äù y ‚Äúmalo‚Äù suelen aparecer en contextos similares). Los tama√±os de ventana m√°s grandes nos llevana a &lt;em&gt;embeddings&lt;/em&gt; en donde la similitud es m√°s bien una medida del nivel de relaci√≥n entre dos palabras. En la pr√°ctica, probablemente tengas que proveer &lt;a href=&quot;https://youtu.be/ao52o9l6KGw?t=287&quot;&gt;anotaciones&lt;/a&gt; que gu√≠en el proceso de generaci√≥n de &lt;em&gt;embeddings&lt;/em&gt; y entreguen un sentido mejor de similitud. El tama√±o de ventana por default en &lt;em&gt;Gensim&lt;/em&gt; es 5 (dos palabras antes y dos palabras despu√©s de la palabra de entrada).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jalammar.github.io/images/word2vec/word2vec-negative-samples.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El n√∫mero de ejemplos negativos es otro factor a considerar en el proceso de entrenamiento, el &lt;em&gt;paper&lt;/em&gt; original recomienda de 5 a 20 como un buen n√∫mero de ejemplos negativos. Tambi√©n menciona que de 2 a 5 suele ser suficiente cuando se tiene un &lt;em&gt;dataset&lt;/em&gt; de buen tama√±o. El default en Gensim es 5 ejemplos negativos.&lt;/p&gt;

&lt;h2 id=&quot;conclusi√≥n&quot;&gt;Conclusi√≥n&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÄúSi sale de tu dominio, entonces est√°s interactuando con inteligencia, no con automatizaci√≥n.‚Äù ~ Dios Emperador de Dune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Espero que ahora ya comprendas qu√© son los &lt;em&gt;embeddings&lt;/em&gt; y el algoritmo detr√°s de &lt;em&gt;word2vec&lt;/em&gt;. Tambi√©n espero que cuando leas un art√≠culo cient√≠fico mencionando &lt;em&gt;‚Äúskipgram with negative sampling‚Äù&lt;/em&gt; (como los que mencion√© al principio), entiendas lo que significan estos conceptos. Como siempre, cualquier comentario es bien apreciado &lt;a href=&quot;https://twitter.com/JayAlammar&quot;&gt;@JayAlammar&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;referencias-y-recursos-para-seguir-leyendo&quot;&gt;Referencias y recursos para seguir leyendo&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf&quot;&gt;Distributed Representations of Words and Phrases and their Compositionality&lt;/a&gt; [pdf]&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1301.3781.pdf&quot;&gt;Efficient Estimation of Word Representations in Vector Space&lt;/a&gt; [pdf]&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jmlr.org/papers/volume3/bengio03a/bengio03a.pdf&quot;&gt;A Neural Probabilistic Language Model&lt;/a&gt; [pdf]&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/~jurafsky/slp3/&quot;&gt;Speech and Language Processing&lt;/a&gt; by Dan Jurafsky and James H. Martin is a leading resource for NLP. Word2vec is tackled in Chapter 6.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Language-Processing-Synthesis-Lectures-Technologies/dp/1627052984&quot;&gt;Neural Network Methods in Natural Language Processing&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/yoavgo&quot;&gt;Yoav Goldberg&lt;/a&gt; is a great read for neural NLP topics.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mccormickml.com/&quot;&gt;Chris McCormick&lt;/a&gt; has written some great blog posts about Word2vec. He also just released &lt;a href=&quot;https://www.preview.nearist.ai/paid-ebook-and-tutorial&quot;&gt;The Inner Workings of word2vec&lt;/a&gt;, an E-book focused on the internals of word2vec.&lt;/li&gt;
  &lt;li&gt;Want to read the code? Here are two options:
    &lt;ul&gt;
      &lt;li&gt;Gensim‚Äôs &lt;a href=&quot;https://github.com/RaRe-Technologies/gensim/blob/develop/gensim/models/word2vec.py&quot;&gt;python implementation&lt;/a&gt; of word2vec&lt;/li&gt;
      &lt;li&gt;Mikolov‚Äôs original &lt;a href=&quot;https://github.com/tmikolov/word2vec/blob/master/word2vec.c&quot;&gt;implementation in C&lt;/a&gt; ‚Äì better yet, this &lt;a href=&quot;https://github.com/chrisjmccormick/word2vec_commented/blob/master/word2vec.c&quot;&gt;version with detailed comments&lt;/a&gt; from Chris McCormick.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sro.sussex.ac.uk/id/eprint/61062/1/Batchkarov,%20Miroslav%20Manov.pdf&quot;&gt;Evaluating distributional models of compositional semantics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ruder.io/word-embeddings-1/index.html&quot;&gt;On word embeddings&lt;/a&gt;, &lt;a href=&quot;http://ruder.io/word-embeddings-softmax/&quot;&gt;part 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dune-Frank-Herbert/dp/0441172717/&quot;&gt;Dune&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;small&gt;Alammar, Jay (2019). The Illustrated Word2vec [Blog post]. Retrieved from &lt;a href=&quot;http://jalammar.github.io/illustrated-word2vec/&quot;&gt;http://jalammar.github.io/illustrated-word2vec/&lt;/a&gt; &lt;/small&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Sin m√°s les recuerdo que como siempre, quedo atento a sus dudas y comentarios en mi cuenta de Twitter &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;, en donde me pueden con contactar para hablar sobre ciencia de datos, ingenier√≠a de software y muchas cosas m√°s.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="python" />
      
        <category term="skelarn" />
      
        <category term="texto" />
      
        <category term="word2vec" />
      

      
        <summary type="html">En esta ocasi√≥n les quiero hablar de otra forma de convertir texto a vectores, esta es distinta a las que hemos visto previamente ya que nos da como resultado un vector por cada token y cada uno de estos vectores es un vector denso.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">De texto a vectores (parte 1)</title>
      <link href="https://old.tacosdedatos.com/texto-vectores" rel="alternate" type="text/html" title="De texto a vectores (parte 1)" />
      <published>2020-08-24T10:00:00+00:00</published>
      <updated>2020-08-24T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/texto-vectores</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/texto-vectores">&lt;p&gt;Tener nuestro texto convertido en tokens es un paso importante en el uso de texto para aplicaciones de machine learning, existe una transformaci√≥n que debemos realizar para facilitarle la tarea a nuestros modelos. Esta transformaci√≥n es conocida como vectorizaci√≥n.&lt;/p&gt;

&lt;p&gt;En el &lt;a href=&quot;https://tacosdedatos.com/analisis-texto&quot;&gt;post pasado&lt;/a&gt; nos quedamos con nuestro texto ya tokenizado, sin embargo los modelos de machine learning operan con valores num√©ricos organizados en arreglos llamados vectores, y hasta el momento nuestros tokens son solo secuencias de caracteres. Nuestra tarea, y de lo que les voy a hablar en el siguiente post, es convertir esta secuencias a vectores.&lt;/p&gt;

&lt;h2 id=&quot;un-poco-de-nomenclatura&quot;&gt;Un poco de nomenclatura&lt;/h2&gt;
&lt;p&gt;Cuando se habla de texto en el contexto de la ciencia de datos hay algunas palabras que debemos entender ya que son com√∫nmente usadas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Token&lt;/strong&gt;, conjunto de caracteres que representa la m√≠nima unidad en el an√°lisis de texto.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documento&lt;/strong&gt;, la representaci√≥n escrita de una idea, concepto o di√°logo, un documento est√° compuesto por varios tokens. Como ejemplos de documentos podemos tener un &lt;em&gt;tweet&lt;/em&gt;, un di√°logo en una pel√≠cula o un &lt;em&gt;paper&lt;/em&gt; de una publicaci√≥n cient√≠fica.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Corpus&lt;/strong&gt;, todo el conjunto de documentos sobre el que estamos realizando el an√°lisis.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vocabulario&lt;/strong&gt;, el conjunto de tokens √∫nicos que obtenemos como resultado al tokenizar nuestro &lt;em&gt;corpus&lt;/em&gt; completo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por ejemplo, debajo tenemos tres documentos, que en conjunto forman nuestro corpus.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Fui a comer tacos de suadero. Juro que es el suadero m√°s delicioso de mi vida. #suadero&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Taco de delicioso suadero con bolsa de pl√°stico para que no ensucie el plato.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tengo ganas de comprarme unos tacos de f√∫tbol, ir a la cancha y jugar hasta la noche&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Luego, una vez tokenizado con la funci√≥n que desarrollamos en el post anterior, nos queda el siguiente vocabulario: &lt;strong&gt;bolsa&lt;/strong&gt;, &lt;strong&gt;cancha&lt;/strong&gt;, &lt;strong&gt;comer&lt;/strong&gt;, &lt;strong&gt;comprarme&lt;/strong&gt;, &lt;strong&gt;delicioso&lt;/strong&gt;, &lt;strong&gt;ensuciar&lt;/strong&gt;, &lt;strong&gt;f√∫tbol&lt;/strong&gt;, &lt;strong&gt;ganar&lt;/strong&gt;, &lt;strong&gt;jugar&lt;/strong&gt;, &lt;strong&gt;juro&lt;/strong&gt;, &lt;strong&gt;noche&lt;/strong&gt;, &lt;strong&gt;plato&lt;/strong&gt;, &lt;strong&gt;pl√°stico&lt;/strong&gt;, &lt;strong&gt;suadero&lt;/strong&gt;, &lt;strong&gt;taco&lt;/strong&gt; y &lt;strong&gt;vida&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Como referencia, aqu√≠ est√° la funci√≥n tokenizadora que llamamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokenize_phrase&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parsed_phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_punct&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_stop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spanish_stopwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lemma_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;SciKit-Learn&lt;/strong&gt;: Si no est√°s familiarizado con la interfaz de SciKit-Learn te invito a &lt;a href=&quot;https://www.youtube.com/watch?v=XgXPxrEg0rA&quot;&gt;ver mi video sobre el tema&lt;/a&gt;. En resumen, &lt;em&gt;SciKit-Learn&lt;/em&gt; tiene unas clases que se conocen como &lt;em&gt;transformers&lt;/em&gt;, estos, como el nombre nos indica, son usados para transformar datos entre dos dominios. Los transformadores que vamos a usar poseen dos m√©todos que estamos usando: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fit&lt;/code&gt;, que nos ayuda preparar nuestro vectorizador, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform&lt;/code&gt; que nos ayuda a convertir nuestros datos a vectores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;bolsa-de-palabras-bag-of-words&quot;&gt;Bolsa de palabras (&lt;em&gt;Bag of words&lt;/em&gt;)&lt;/h2&gt;
&lt;p&gt;Una de las primeras ideas que se nos puede venir a la mente es la de generar una peque√±a tabla, en donde cada documento es un rengl√≥n y cada token es una columna:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/004_empty.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CountVectorizer&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;analyzer&lt;/code&gt;&lt;/strong&gt;: Al especificar el argumento &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;analyzer&lt;/code&gt; y asignarlo a nuestra funci√≥n para tokenizar (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokenize_phrase&lt;/code&gt;) le estamos indicando a nuestro transformador que cuando sea el momento de tokenizar nuestros documentos, use esa funci√≥n en lugar del tokenizador por default que viene en &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sklearn&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;vectores-de-frecuencia&quot;&gt;Vectores de frecuencia&lt;/h3&gt;
&lt;p&gt;Para rellenar la tabla anterior tenemos varias opciones, por ejemplo, podr√≠amos simplemente la cantidad de veces que un determinado token aparece en cada uno de los documentos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/004_frequency.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como, en nuestro caso, la palabra ‚Äúsuadero‚Äù aparece tres veces en el primer documento.&lt;/p&gt;

&lt;p&gt;Para lograr esto, vamos a hacer uso de &lt;em&gt;SciKit-Learn&lt;/em&gt;, que si bien no es un framework dedicado a trabajar con texto, tiene bastantes utilidades que nos permiten hacerlo de manera sencilla y reproducible.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;frequency_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;frequency_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;frequency_vectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frequency_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;one-hot-encoding-bag-of-words&quot;&gt;One-hot-encoding (&lt;em&gt;Bag of words&lt;/em&gt;)&lt;/h3&gt;
&lt;p&gt;Otra opci√≥n que tenemos, si es que solamente queremos saber si una palabra existe en un documento o no, es la de usar la codificaci√≥n &lt;em&gt;one-hot&lt;/em&gt;, que simplemente consiste en colocar verdadero o falso (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;) dependiendo de si la palabra existe o no:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/004_onehot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como, en nuestro caso, a pesar de que la palabra ‚Äúsuadero‚Äù aparece tres veces en el primer documento, solamente hay un uno en la columna correspondiente. Para lograr esto con Python, el siguiente c√≥digo es √∫til:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;one_hot_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;one_hot_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;one_hot_vectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one_hot_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CountVectorizer&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary&lt;/code&gt;&lt;/strong&gt;: A pesar de usar la misma clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CountVectorizer&lt;/code&gt;, el especificar el argumento &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary = True&lt;/code&gt; le indica a nuestro &lt;em&gt;transformer&lt;/em&gt; que simplemente queremos saber si un token existe en un documento, no cu√°ntas veces aparece.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;tf-idf&quot;&gt;TF-IDF&lt;/h3&gt;
&lt;p&gt;Tanto el vector de frecuencias como el binario tratan cada documento de manera individual. Lo cual es bueno hasta cierto punto, sin embargo, existe una transformaci√≥n que toma en cuenta la influencia de todo el &lt;em&gt;corpus&lt;/em&gt; en cada documento.&lt;/p&gt;

&lt;p&gt;La idea detr√°s del famoso TF-IDF (Term Frequency ‚Äì Inverse Document Frequency), o por su nombre en espa√±ol: &lt;em&gt;frecuencia de t√©rmino ‚Äì frecuencia inversa de documento&lt;/em&gt;, El valor de cada token aumenta proporcionalmente al n√∫mero de veces que una palabra aparece en el documento, pero es compensada por la frecuencia de la palabra en la colecci√≥n de documentos, lo que permite manejar el hecho de que algunas palabras son generalmente m√°s comunes que otras.&lt;/p&gt;

&lt;h3 id=&quot;detalles-matem√°ticos&quot;&gt;Detalles matem√°ticos‚Ä¶&lt;/h3&gt;

&lt;p&gt;Existen diversas maneras de calcular este n√∫mero &lt;a href=&quot;https://es.wikipedia.org/wiki/Tf-idf#Detalles_matem%C3%A1ticos&quot;&gt;la wikipedia lista varias&lt;/a&gt;, pero esta es una de las m√°s comunes:&lt;/p&gt;

&lt;p&gt;Partiendo de que&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;\(t\) es el token para el cual estamos calculando,&lt;/li&gt;
  &lt;li&gt;\(d\) es el documento de inter√©s y&lt;/li&gt;
  &lt;li&gt;\(D\) es nuestro corpus&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obtenemos el valor de acuerdo a la siguiente formula&lt;/p&gt;

\[tfidf(t, d, D) = \color{blue}{tf(t, d)} \times \color{red}{idf(t, D)}\]

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;\(\color{blue}{tf(t, d) = f_{t,d}}\) es la cantidad de veces que el token \(t\) aparece en el documento \(d\).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;\(\color{red}{idf(t, D) = \ln{\frac{\vert D \vert + 1}{\vert\{d \in D: t \in d\}\vert + 1} + 1}}\) en donde \(\vert D \vert\) es la cantidad de documentos en nuestro corpus y \(\vert \{d \in D: t \in d\} \vert\) es la cantidad de documentos en la que aparece el token \(t\). Los \(+ 1\) que se encuentran ah√≠ son conocidos como ‚Äúsuavizado‚Äù que nos ayudan a evitar divisiones entre \(0\).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Toma por ejemplo, el token &lt;em&gt;suadero&lt;/em&gt; en el primer documento (denotado como \(documentos_1\)):&lt;/p&gt;

\[tfidf(‚Äúsuadero‚Äù, documentos_1, corpus) = \color{blue}{tf(‚Äúsuadero‚Äù, documentos_1)} \times \color{red}{idf(‚Äúsuadero‚Äù, corpus)}\]

\[tfidf(‚Äúsuadero‚Äù, documentos_1, corpus) = \color{blue}{3} \times \color{red}{\ln{\frac{3 + 1}{2 + 1} + 1}}\]

\[tfidf(‚Äúsuadero‚Äù, documentos_1, corpus) = \color{blue}{3} \times \color{red}{\ln{\frac{4}{3}+1}}\]

\[tfidf(‚Äúsuadero‚Äù, documentos_1, corpus) = \color{blue}{3} \times \color{red}{\ln{2.333}}\]

\[tfidf(‚Äúsuadero‚Äù, documentos_1, corpus) = 3.8630\]

&lt;p&gt;Como se puede observar en la siguiente tabla:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/004_tfidf_no_norm.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usualmente los algoritmos lineares de &lt;em&gt;machine learning&lt;/em&gt; otorgan mejores resultados cuando nuestras variables de entrada est√°n normalizadas, as√≠ que se recomienda que nosotros hagamos lo mismo.&lt;/p&gt;

&lt;p&gt;Para nuestra suerte, dentro de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sklearn&lt;/code&gt; tambi√©n existe un &lt;em&gt;transformer&lt;/em&gt; que nos permite convertir nuestros vectores a TF-IDF (incluyendo la parta de la normalizaci√≥n):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tfidf_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tfidf_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tfidf_vectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tfidf_vectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Que nos dar√° como resultado una matriz m√°s o menos as√≠:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/004_tfidf.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sobre-las-representaciones-vectoriales&quot;&gt;Sobre las representaciones vectoriales‚Ä¶&lt;/h2&gt;

&lt;h3 id=&quot;representaciones-dispersas&quot;&gt;Representaciones dispersas&lt;/h3&gt;
&lt;p&gt;Si de algo nos dimos cuenta con las matrices anteriores, es que en muchas ocasiones, tenemos m√°s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; (valores en blanco) que valores reales. En otras palabras, nuestros documentos-vectores son dispersos, o en ingles &lt;em&gt;sparse vectors&lt;/em&gt;. Esto podr√≠a llegar a ser un problema cuando tenemos un vocabulario de tama√±o considerable.&lt;/p&gt;

&lt;h3 id=&quot;no-reflejan-el-orden-de-los-t√©rminos&quot;&gt;No reflejan el orden de los t√©rminos&lt;/h3&gt;
&lt;p&gt;Otra cosa a considerar es que con solo ver la representaci√≥n vectorizada de determinado documento, no podemos reconstruir el documento original, de entrada por todo el proceso de tokenizaci√≥n, pero tambi√©n porque &lt;strong&gt;ninguna de las t√©cnicas que vimos, preserva el orden original de los tokens en el documento&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;existen-todav√≠a-m√°s-opciones&quot;&gt;Existen todav√≠a m√°s opciones&lt;/h3&gt;
&lt;p&gt;Si bien estas representaciones son buenas u √∫tiles, hay casos en los que necesitamos obtener m√°s detalle de nuestros documentos, para esos casos podemos usar t√©cnicas como &lt;a href=&quot;http://jalammar.github.io/illustrated-word2vec/&quot;&gt;Word2vec&lt;/a&gt; o &lt;a href=&quot;https://medium.com/wisio/a-gentle-introduction-to-doc2vec-db3e8c0cce5e&quot;&gt;Doc2vec&lt;/a&gt;, de las cuales espero escribir en un post futuro.&lt;/p&gt;

&lt;h3 id=&quot;guarda-tus-vectorizadores&quot;&gt;Guarda tus vectorizadores&lt;/h3&gt;
&lt;p&gt;Sin importar qu√© m√©todo de transformaci√≥n usaste, siempre debes usar el mismo para transformaciones subsecuentes. Por ejemplo, si usaste &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fit&lt;/code&gt; con un transformador para los datos de entrenamiento de un algoritmo de clasificaci√≥n, debes usar el mismo transformador (ya entrenado) para obtener los vectores al momento de realizar predicciones en nuevos datos.&lt;/p&gt;

&lt;p&gt;Mientras tanto, te invito a que me en Twitter en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;, por all√° podemos conversar sobre el tema.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="python" />
      
        <category term="skelarn" />
      
        <category term="texto" />
      

      
        <summary type="html">Tener nuestro texto convertido en tokens es un paso importante en el uso de texto para aplicaciones de machine learning, existe una transformaci√≥n que debemos realizar para facilitarle la tarea a nuestros modelos. Esta transformaci√≥n es conocida como vectorizaci√≥n.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Introducci√≥n al an√°lisis de texto</title>
      <link href="https://old.tacosdedatos.com/analisis-texto" rel="alternate" type="text/html" title="Introducci√≥n al an√°lisis de texto" />
      <published>2020-08-16T10:00:00+00:00</published>
      <updated>2020-08-16T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/analisis-texto</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/analisis-texto">&lt;p&gt;¬øAlguna vez has querido analizar texto? en este post voy a tratar de explicar cu√°les son los primeros pasos recomendados para comenzar cualquier proyecto que involucre texto y ciencia de datos.&lt;/p&gt;

&lt;h2 id=&quot;texto-como-datos&quot;&gt;Texto como datos&lt;/h2&gt;
&lt;p&gt;Seguramente ya habr√°s escuchado algunas veces, o tu mismo has dicho ‚ÄúHey Google‚Äù o ‚ÄúHey Siri‚Äù, o tal vez te le has echado un ojo a tu filtro de spam‚Ä¶ pero ¬øte has preguntado c√≥mo es que funcionan estos sistemas? como ya te imaginar√°s, la mayor√≠a son aplicaciones de aprendizaje autom√°tico (o &lt;em&gt;machine learning&lt;/em&gt;) que son posibles gracias a muchos de los algoritmos tradicionales del aprendizaje m√°quina.&lt;/p&gt;

&lt;p&gt;Sin embargo, no podemos nosotros simplemente agarrar un mont√≥n de texto y d√°rselo a un algoritmo y esperar a que haga su magia‚Ä¶ antes de todo esto existe un proceso que les voy a describir a continuaci√≥n.&lt;/p&gt;

&lt;h2 id=&quot;spacy&quot;&gt;&lt;em&gt;spaCy&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Aqu√≠ es donde entra &lt;em&gt;spaCy&lt;/em&gt;, que es un paquete de Python que podr√≠amos comparar con una navaja suiza para el procesamiento de texto. Esta es una herramienta muy poderosa, y aqu√≠ solamente vamos a tocar apenas la superficie de lo que ofrece. Para comenzar, hay que instalarlo:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;spacy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instalar &lt;em&gt;spaCy&lt;/em&gt; es solo la primera parte del rompecabezas, puesto que su correcto funcionamiento depende de usar el modelo adecuado para la tarea (y el idioma) que vamos a realizar, aqu√≠ puedes encontrar una &lt;a href=&quot;https://spacy.io/models&quot;&gt;descripci√≥n de los modelos&lt;/a&gt;, pero para este post, podemos usar el m√°s simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;es_core_news_sm&lt;/code&gt;, se descarga con estos comandos en la consola:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; spacy download es_core_news_sm 
python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; spacy &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;es_core_news_sm es
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para acceder dentro de Python a todas las bondades de nuestra nueva herramienta, es necesario cargar el modelo, es convenci√≥n cargar el modelo en una variable llamada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nlp&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;es&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y listo, por el momento podemos seguir.&lt;/p&gt;

&lt;h2 id=&quot;tokenizaci√≥n&quot;&gt;Tokenizaci√≥n&lt;/h2&gt;
&lt;p&gt;El primer paso es segmentar nuestro texto en tokens. Un token es un conjunto de caracteres que representan texto. Tambi√©n podemos decir que el token es la √∫nidad an√°lisis de texto, as√≠ como un n√∫mero es la unidad del an√°lisis matem√°tico. Es f√°cil para nosotros pensar que un token es igual a una palabra, sin embargo esto no es correcto, puesto que la ‚Äúpalabra‚Äù es un elemento del lenguaje que posee significado por s√≠ misma, mientras que el token se supone es un elemento abstracto. Dependiendo de la tarea que estemos afrontando, el token puede ser alguna de las siguientes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Una sola palabra, como: ‚Äúj√≥venes‚Äù, ‚Äúnivel‚Äù o ‚Äúsuperior‚Äù,&lt;/li&gt;
  &lt;li&gt;Un n√∫mero, como: ‚Äú1‚Äù, ‚Äú0‚Äù, o ‚Äú10‚Äù,&lt;/li&gt;
  &lt;li&gt;Un solo caracter, como: ‚Äúj‚Äù, ‚Äú√≥‚Äù o ‚Äúv‚Äù,&lt;/li&gt;
  &lt;li&gt;Un s√≠mbolo, como ‚Äú¬ø‚Äù, ‚Äú?‚Äù o ‚Äú#‚Äù,&lt;/li&gt;
  &lt;li&gt;Un conjunto de caracteres, como ‚Äúnivel superior‚Äù o ‚Äúescuela t√©cnica‚Äù&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La forma de elegir los tokens en nuestro texto va a depender much√≠simo del problema que estemos afrontando, habr√° ocasiones en las que una simple tokenizaci√≥n, como la de dividir nuestro texto por los espacios, bastar√°:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Seguramente ya habr√°s escuchado algunas veces, o tu mismo has dicho &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hey Google&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; o &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hey Siri&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, o tal vez le has echado un ojo a tu filtro de spam...&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;simple_tokens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['Seguramente', 'ya', 'habr√°s', 'escuchado', 'algunas', 'veces,', 'o', 'tu', 'mismo', 'has', 'dicho', '&quot;Hey', 'Google&quot;', 'o', '&quot;Hey', 'Siri&quot;,', 'o', 'tal', 'vez', 'le', 'has', 'echado', 'un', 'ojo', 'a', 'tu', 'filtro', 'de', 'spam...']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pero habr√° otras ocasiones en las que tengamos que echar mano de otras formas de tokenizar el texto, por ejemplo en el paquete &lt;em&gt;spaCy&lt;/em&gt; podemos echar mano de algunas herramientas.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Seguramente, ya, habr√°s, escuchado, algunas, veces, ,, o, tu, mismo, has, dicho, &quot;, Hey, Google, &quot;, o, &quot;, Hey, Siri, &quot;, ,, o, tal, vez, le, has, echado, un, ojo, a, tu, filtro, de, spam, ...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La gran diferencia es que en la segunda tokenizaci√≥n los s√≠mbolos de puntuaci√≥n est√°n separadas de las palabras en el texto.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;spaCy&lt;/em&gt;: Cuando llamamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nlp(&quot;alg√∫n texto&quot;)&lt;/code&gt; obtenemos como retorno un valor del tipo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Document&lt;/code&gt;, que, a su vez est√° compuesto de valores del tipo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token&lt;/code&gt;, es por eso que podemos iterar nuestro documento con un ciclo &lt;em&gt;for&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;reducci√≥n-de-tokens&quot;&gt;Reducci√≥n de tokens&lt;/h2&gt;

&lt;h3 id=&quot;min√∫sculas-may√∫sculas&quot;&gt;¬øMin√∫sculas? ¬ømay√∫sculas?&lt;/h3&gt;
&lt;p&gt;Hasta este punto todo bien con nuestros tokens, pero piensa en una oraci√≥n como:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;oracion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;El ciclo escolar comienza en las escuelas. Escuelas de todo el pa√≠s comenzar√°n clases este lunes.&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Los tokens √∫nicos de esta oraci√≥n son:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;oracion_parsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oracion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{'clases', 'El', 'las', 'en', 'todo', 'comenzar√°n', 'este', 'ciclo', 'escolar', 'comienza', 'escuelas', '.', 'el', 'lunes', 'Escuelas', 'pa√≠s', 'de'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si te das cuenta, ‚Äú&lt;em&gt;Escuelas&lt;/em&gt;‚Äù y ‚Äú&lt;em&gt;escuelas&lt;/em&gt;‚Äù son dos tokens distintos, (recuerda, los tokens no son palabras); sin embargo, para muchas aplicaciones, estos dos tokens pueden, simple y sencillamente ser tratados como el mismo, simplemente con transformar todos nuestros tokens a min√∫sculas. Usamos la propiedad &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lower_&lt;/code&gt; de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token&lt;/code&gt; para acceder a la versi√≥n en min√∫scula de la palabra:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion_parsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{'pa√≠s', 'lunes', 'comenzar√°n', 'en', '.', 'el', 'comienza', 'de', 'ciclo', 'las', 'escolar', 'clases', 'este', 'todo', 'escuelas'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;spaCy&lt;/em&gt;: como ya sabemos, en nuestro ejemplo de c√≥digo anterior, cuando iteramos sobre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oracion_parsed&lt;/code&gt;, obtenemos uno a uno los tokens que forman nuestro documento original. Cada uno de estos elementos de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token&lt;/code&gt; posee &lt;a href=&quot;https://spacy.io/api/token&quot;&gt;muchas propiedades&lt;/a&gt;, de entre ellas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lower_&lt;/code&gt; es una.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;stopwords-signos-de-puntuaci√≥n&quot;&gt;¬ø&lt;em&gt;Stopwords&lt;/em&gt;? ¬øSignos de puntuaci√≥n?&lt;/h3&gt;

&lt;p&gt;Como resultado de la tokenizaci√≥n, en el ejemplo anterior vemos que existen muchos &lt;em&gt;tokens&lt;/em&gt; que, dependiendo del an√°lisis que vayamos a realizar, podemos considerar ‚Äúirrelevantes‚Äù para nuestro an√°lisis, por ejemplo, las palabras ‚Äúen‚Äù, ‚Äúeste‚Äù, ‚Äúel‚Äù y ‚Äúlas‚Äù ya que son muy comunes en el espa√±ol y est√°n destinadas a aparecer en todas las oraciones, sin importar el tema al que estas hagan referencia. Estas palabras en ingl√©s son conocidas como ‚Äú&lt;em&gt;stopwords&lt;/em&gt;‚Äù. Para encontrarlas con &lt;em&gt;spaCy&lt;/em&gt; podemos usar la propiedad &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_stop&lt;/code&gt; de cada token:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_stop&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion_parsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['el: True', 'ciclo: False', 'escolar: False', 'comienza: False', 'en: True', 'las: True', 'escuelas: False', '.: False', 'escuelas: False', 'de: True', 'todo: True', 'el: True', 'pa√≠s: False', 'comenzar√°n: False', 'clases: False', 'este: True', 'lunes: False', '.: False']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Al igual que las stopwords puede ser que los s√≠mbolos carezcan de relevancia en nuestro an√°lisis, nuevamente, por ser considerados como una ocurrencia com√∫n en el espa√±ol. Para encontrarlos, podemos hacer uso de la propiedad &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_punct&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_punct&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion_parsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['el: False', 'ciclo: False', 'escolar: False', 'comienza: False', 'en: False', 'las: False', 'escuelas: False', '.: True', 'escuelas: False', 'de: False', 'todo: False', 'el: False', 'pa√≠s: False', 'comenzar√°n: False', 'clases: False', 'este: False', 'lunes: False', '.: True']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lematizaci√≥n&quot;&gt;Lematizaci√≥n&lt;/h3&gt;

&lt;p&gt;Otro procedimiento que podemos usar para reducir la cantidad de tokens √∫nicos es el proceso de lematizaci√≥n, que es un proceso ling√º√≠stico que consiste en, dada una forma flexionada, hallar el lema correspondiente. El lema es la forma que por convenio se acepta como representante de todas las formas flexionadas de una misma palabra‚Ä¶ pero creo que es mejor con algunos ejemplos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;comienza -&amp;gt; comenzar&lt;/li&gt;
  &lt;li&gt;comenzar√°n -&amp;gt; comenzar&lt;/li&gt;
  &lt;li&gt;clases -&amp;gt; clase&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lemma_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{'pa√≠s', 'lunes', 'en', '.', 'el', 'los', 'de', 'escolar', 'clase', 'este', 'ciclar', 'comenzar', 'escuela', 'todo', 'escuelas'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;stemming---acortamiento-&quot;&gt;Stemming - Acortamiento (?)&lt;/h3&gt;

&lt;p&gt;Existe otra forma de reducir el n√∫mero de tokens. Y es conocida como &lt;em&gt;stemming&lt;/em&gt; en ingl√©s, en espa√±ol yo lo traducir√≠a como ‚Äúacortamiento‚Äù o ‚Äúpoda (de podar el c√©sped)‚Äù. Este proceso consiste en simple y llanamente recortar las palabras para reduciras a una base com√∫n:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;comienza -&amp;gt; comienz&lt;/li&gt;
  &lt;li&gt;comenzar√°n -&amp;gt; comenz&lt;/li&gt;
  &lt;li&gt;clases -&amp;gt; clas&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk.stem.snowball&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SnowballStemmer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stemmer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SnowballStemmer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'spanish'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stemmer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{'escol', 'en', 'comienz', 'el', '.', 'de', 'comenz', 'las', 'lun', 'pais', 'este', 'clas', 'tod', 'cicl', 'escuel'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;spaCy&lt;/em&gt;: por incre√≠ble que parezca, esta poderosa librer√≠a no cuenta con la opci√≥n de ejecutar &lt;em&gt;stemming&lt;/em&gt; por default, las &lt;a href=&quot;https://github.com/explosion/spaCy/issues/327#issuecomment-208658745&quot;&gt;razones son varias&lt;/a&gt; y tratar√© de hablar sobre ellas m√°s adelante, pero por ahora, si quieres realizar &lt;em&gt;stemming&lt;/em&gt;, el paquete NLTK es tu aliado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;preguntas-m√°s-comunes&quot;&gt;Preguntas m√°s comunes&lt;/h3&gt;

&lt;h4 id=&quot;lematizaci√≥n-o-stemming&quot;&gt;¬øLematizaci√≥n o &lt;em&gt;stemming&lt;/em&gt;?&lt;/h4&gt;

&lt;p&gt;Estas dos t√©cnicas son consideradas mutuamente exclusivas, puesto que o aplicas una o aplicas la otra, nunca las dos. Pero, ¬øcu√°l es la m√°s recomendada?&lt;/p&gt;

&lt;p&gt;En general siempre se prefiere la lematizaci√≥n, puesto que es un buen compromiso entre reducir la cantidad de tokens y preservar un poco m√°s la composici√≥n original de estos. El &lt;em&gt;stemming&lt;/em&gt; al ser m√°s agresivo tiende a conllevar una p√©rdida de informaci√≥n m√°s grande.&lt;/p&gt;

&lt;h4 id=&quot;cu√°l-es-el-orden-en-que-se-aplican-los-pasos&quot;&gt;¬øCu√°l es el orden en que se aplican los pasos?&lt;/h4&gt;
&lt;p&gt;Es com√∫n que despu√©s de tokenizar el texto, los pasos se apliquen en el orden presentado:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Conversi√≥n a min√∫sculas&lt;/li&gt;
  &lt;li&gt;Eliminaci√≥n de &lt;em&gt;stopwords&lt;/em&gt; y s√≠mbolos de puntuaci√≥n&lt;/li&gt;
  &lt;li&gt;Lematizaci√≥n o &lt;em&gt;stemming&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Siempre es muy importante realizar el proceso de eliminaci√≥n de &lt;em&gt;stopwords&lt;/em&gt; antes de transformar los tokens, puesto que de otro modo puede que el proceso de transformaci√≥n convierta ‚Äúaccidentalmente‚Äù nuestros tokens √∫tiles en &lt;em&gt;stopwords&lt;/em&gt; y esto nos lleve a perder informaci√≥n valiosa de nuestro dataset.&lt;/p&gt;

&lt;h4 id=&quot;por-qu√©-querr√≠amos-reducir-la-cantidad-de-informaci√≥n-mediante-estas-transformaciones&quot;&gt;¬øPor qu√© querr√≠amos ‚Äúreducir‚Äù la cantidad de informaci√≥n mediante estas transformaciones?&lt;/h4&gt;
&lt;p&gt;La idea detr√°s de la eliminaci√≥n de &lt;em&gt;stopwords&lt;/em&gt;, s√≠mbolos, la lematizaci√≥n o &lt;em&gt;stemming&lt;/em&gt; radica en reducir la cantidad de elementos √∫nicos en nuestro dataset, con el objetivo de incrementar el desempe√±o de nuestro algoritmo de dos maneras:&lt;/p&gt;

&lt;p&gt;El eliminar las &lt;em&gt;stopwords&lt;/em&gt; nos ayuda a elminiar palabras comunes que tienen poco valor discriminativo entre textos. As√≠ mismo, para muchos problemas no necesitamos conocer el tiempo en el que un verbo estaba escrito, o si la palabra era ‚Äúcorrupto‚Äù o ‚Äúcorrupci√≥n‚Äù; con las formas base el algoritmo puede ‚Äúaprender‚Äù una idea general.&lt;/p&gt;

&lt;p&gt;Esta misma idea se puede aplicar para tokens muy raros dentro de nuestro texto‚Ä¶ podr√≠amos eliminar tokens que no aparezcan m√°s de $X$ cantidad de veces, bajo la sospecha de que tal vez fueron errores ortogr√°ficos o palabras sin importancia.&lt;/p&gt;

&lt;p&gt;Si tienes m√°s dudas o comentarios, no olvides hac√©rmelas llegar a trav√©s de los comentarios en esta p√°gina, o, para mayor seguridad, a mi cuenta de Twitter &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;y-las-visualizaciones&quot;&gt;¬øY las visualizaciones?&lt;/h3&gt;
&lt;p&gt;Para no fallarle al p√∫blico de Tacos de Datos, vamos a hacer una sencill√≠sima visualizaci√≥n con las palabras que m√°s frecuente usa el presidente mexicano en sus conferencias (ojo, ac√° no vamos a hablar de pol√≠tica). Y de paso aprovecho para presentarles un dataset que estoy manteniendo en Kaggle, en el cual coloco m√°s o menos semanalmente todas las versiones estenogr√°ficas de las conferencias que publica la presidencia de M√©xico. Puedes acceder al dataset aqu√≠ &lt;a href=&quot;https://www.kaggle.com/ioexception/mananeras&quot;&gt;Conferencias Ma√±aneras&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;El primer paso es crear una funci√≥n que nos ayude a tokenizar texto, esta es una funci√≥n que debemos conservar, ya que si en el futuro queremos repetir nuestros experimentos, debemos usar la misma forma de tokenizar para que exista consistencia en nuestros resultados.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stopwords&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;spanish_stopwords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stopwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'spanish'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parsed_phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_punct&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_stop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spanish_stopwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lemma_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Despu√©s, con todas nuestras frases cargadas en el arreglo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lopez_obrador&lt;/code&gt; rellenamos un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Counter&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;word_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amlo_phrase&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lopez_obrador&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenize_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amlo_phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Una vez que tenemos el objeto &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;word_counter&lt;/code&gt; con los valores, podemos graficarlo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most_common&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Las 20 m√°s frecuentemente usadas&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;por L√≥pez Obrador en sus discursos&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;assets/detrasdelavis/003_amlo_words.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Algunas cosas esperadas y otras no tanto: habr√° que ver por qu√© se la pasa diciendo ‚Äúmil‚Äù y ‚Äúcasar‚Äù‚Ä¶ habr√° que ver tambi√©n si estas palabras no son sino las formas base de otras que tal vez hagan m√°s sentido (puede que al lematizar nuestros tokens estemos perdiendo esta informaci√≥n). Como dije, esto es solo el comienzo del an√°lisis de texto, ¬°a√∫n falta mucho por aprender!&lt;/p&gt;

&lt;p&gt;Si tienes alguna duda con lo presentado en este post, repito: preg√∫ntame por Twitter en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="python" />
      
        <category term="spacy" />
      
        <category term="texto" />
      

      
        <summary type="html">¬øAlguna vez has querido analizar texto? en este post voy a tratar de explicar cu√°les son los primeros pasos recomendados para comenzar cualquier proyecto que involucre texto y ciencia de datos.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Introducci√≥n al an√°lisis exploratorio de datos</title>
      <link href="https://old.tacosdedatos.com/introduccion-eda" rel="alternate" type="text/html" title="Introducci√≥n al an√°lisis exploratorio de datos" />
      <published>2020-05-24T10:00:00+00:00</published>
      <updated>2020-05-24T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/introduccion-eda</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/introduccion-eda">&lt;p&gt;En este post les voy a dar una peque√±√≠sima introducci√≥n al an√°lisis exploratorio de datos o EDA por sus siglas en ingl√©s (Exploratory Data Analysis).&lt;/p&gt;

&lt;p&gt;Como lo mencion√© en mi &lt;a href=&quot;https://youtu.be/s7A1OxEeT6o&quot;&gt;video de YouTube sobre el tema&lt;/a&gt;, El AED una forma de realizar an√°lisis de datos, es usualmente uno de los primeros pasos que uno debe realizar antes de aventurarse utilizar el scikit learn o tensoflow para hacer machine learning. Usualmente este proceso de an√°lisis involucra muchas ayudas visuales, es decir gr√°ficas, que nos ayudan a encontrar informaci√≥n que de otra forma ser√≠a dif√≠cil de conocer acerca de nuestros datos; mediante este proceso estamos tratando de encontrar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La estructura y distribuci√≥n de nuestros datos,&lt;/li&gt;
  &lt;li&gt;Encontrar las relaciones entre las variables explicatorias,&lt;/li&gt;
  &lt;li&gt;Encontrar la relaci√≥n que tienen las variables explicatorias con la variable respuesta,&lt;/li&gt;
  &lt;li&gt;Encontrar posibles errores, puntos extremos y anomal√≠as en los datos,&lt;/li&gt;
  &lt;li&gt;Refinar nuestras hip√≥tesis, o generar nuevas preguntas sobre los datos que tenemos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No existe una t√©cnica formal sobre c√≥mo llevar a cabo este tipo de an√°lisis, sino que m√°s dependen de lo que vayamos encontrando en los datos, as√≠ como de la experiencia y conocimiento espec√≠fico del problema con el que contemos.&lt;/p&gt;

&lt;p&gt;Para este post usar√© algunas de las librer√≠as m√°s comunes para el an√°lisis de datos en el ecosistema de Python, todas las puedes instalar desde PyPI:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;numpy pandas matplotlib seaborn scikit-learn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y sobre los datos que vamos a analizar, ser√°n los datos de &lt;a href=&quot;https://www.kaggle.com/uciml/red-wine-quality-cortez-et-al-2009&quot;&gt;Red Wine Quality&lt;/a&gt;. Por cierto, &lt;a href=&quot;https://www.kaggle.com/ioexception/vino-eda&quot;&gt;puedes ver el notebook completo&lt;/a&gt; en Kaggle, si accedes al notebook ah√≠, no tienes que preocuparte por instalar nada ni descargar nada, todo est√° listo. Ahora si, comenzamos con nuestros imports de regla:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;seaborn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.style&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;contextlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.model_selection&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ggplot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora s√≠, leemos nuestros a un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DataFrame&lt;/code&gt; datos usando &lt;em&gt;pandas&lt;/em&gt;, una vez le√≠dos mostramos qu√© tan grande es nuestro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DataFrame&lt;/code&gt;, as√≠ como una muestra de los datos:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wine_quality&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/kaggle/input/red-wine-quality-cortez-et-al-2009/winequality-red.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dataset length&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wine_quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dataset length 1599&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;fixed acidity&lt;/th&gt;
      &lt;th&gt;volatile acidity&lt;/th&gt;
      &lt;th&gt;citric acid&lt;/th&gt;
      &lt;th&gt;residual sugar&lt;/th&gt;
      &lt;th&gt;chlorides&lt;/th&gt;
      &lt;th&gt;free sulfur dioxide&lt;/th&gt;
      &lt;th&gt;total sulfur dioxide&lt;/th&gt;
      &lt;th&gt;density&lt;/th&gt;
      &lt;th&gt;pH&lt;/th&gt;
      &lt;th&gt;sulphates&lt;/th&gt;
      &lt;th&gt;alcohol&lt;/th&gt;
      &lt;th&gt;quality&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;7.4&lt;/td&gt;
      &lt;td&gt;0.70&lt;/td&gt;
      &lt;td&gt;0.00&lt;/td&gt;
      &lt;td&gt;1.9&lt;/td&gt;
      &lt;td&gt;0.076&lt;/td&gt;
      &lt;td&gt;11.0&lt;/td&gt;
      &lt;td&gt;34.0&lt;/td&gt;
      &lt;td&gt;0.9978&lt;/td&gt;
      &lt;td&gt;3.51&lt;/td&gt;
      &lt;td&gt;0.56&lt;/td&gt;
      &lt;td&gt;9.4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;7.8&lt;/td&gt;
      &lt;td&gt;0.88&lt;/td&gt;
      &lt;td&gt;0.00&lt;/td&gt;
      &lt;td&gt;2.6&lt;/td&gt;
      &lt;td&gt;0.098&lt;/td&gt;
      &lt;td&gt;25.0&lt;/td&gt;
      &lt;td&gt;67.0&lt;/td&gt;
      &lt;td&gt;0.9968&lt;/td&gt;
      &lt;td&gt;3.20&lt;/td&gt;
      &lt;td&gt;0.68&lt;/td&gt;
      &lt;td&gt;9.8&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;7.8&lt;/td&gt;
      &lt;td&gt;0.76&lt;/td&gt;
      &lt;td&gt;0.04&lt;/td&gt;
      &lt;td&gt;2.3&lt;/td&gt;
      &lt;td&gt;0.092&lt;/td&gt;
      &lt;td&gt;15.0&lt;/td&gt;
      &lt;td&gt;54.0&lt;/td&gt;
      &lt;td&gt;0.9970&lt;/td&gt;
      &lt;td&gt;3.26&lt;/td&gt;
      &lt;td&gt;0.65&lt;/td&gt;
      &lt;td&gt;9.8&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;11.2&lt;/td&gt;
      &lt;td&gt;0.28&lt;/td&gt;
      &lt;td&gt;0.56&lt;/td&gt;
      &lt;td&gt;1.9&lt;/td&gt;
      &lt;td&gt;0.075&lt;/td&gt;
      &lt;td&gt;17.0&lt;/td&gt;
      &lt;td&gt;60.0&lt;/td&gt;
      &lt;td&gt;0.9980&lt;/td&gt;
      &lt;td&gt;3.16&lt;/td&gt;
      &lt;td&gt;0.58&lt;/td&gt;
      &lt;td&gt;9.8&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;7.4&lt;/td&gt;
      &lt;td&gt;0.70&lt;/td&gt;
      &lt;td&gt;0.00&lt;/td&gt;
      &lt;td&gt;1.9&lt;/td&gt;
      &lt;td&gt;0.076&lt;/td&gt;
      &lt;td&gt;11.0&lt;/td&gt;
      &lt;td&gt;34.0&lt;/td&gt;
      &lt;td&gt;0.9978&lt;/td&gt;
      &lt;td&gt;3.51&lt;/td&gt;
      &lt;td&gt;0.56&lt;/td&gt;
      &lt;td&gt;9.4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De a poco vamos conociendo nuestros datos‚Ä¶ ahora la siguiente pregunta &lt;strong&gt;¬øQu√© variables tenemos?&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lo primero que hay que hacer es tratar de identificar el tipo de variables que tenemos a la mano, en algunos &lt;em&gt;datasets&lt;/em&gt; esto es posible con tan solo leer los nombres de las columnas (como es el caso de el &lt;em&gt;dataset&lt;/em&gt; con el que estamos trabajando). Sin embargo, hay algunos casos en los que los nombres no son provistos (o est√°n ofuscados) por diversas razones.&lt;/p&gt;

&lt;p&gt;Aprovechando que nuestro &lt;em&gt;dataset&lt;/em&gt; s√≠ tiene nombres, podemos verlos con:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wine_quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Index([‚Äòfixed acidity‚Äô, ‚Äòvolatile acidity‚Äô, ‚Äòcitric acid‚Äô, ‚Äòresidual sugar‚Äô,
  ‚Äòchlorides‚Äô, ‚Äòfree sulfur dioxide‚Äô, ‚Äòtotal sulfur dioxide‚Äô, ‚Äòdensity‚Äô,
  ‚ÄòpH‚Äô, ‚Äòsulphates‚Äô, ‚Äòalcohol‚Äô, ‚Äòquality‚Äô],
  dtype=‚Äôobject‚Äô)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Probablemente si no eres un conocedor de vinos, las variables tengan poco o nada de sentido para ti. &lt;strong&gt;Idealmente nosotros deber√≠amos tener conocimiento del tema sobre el que vamos a trabajar (o podemos conseguir un experto que nos gu√≠e)&lt;/strong&gt;‚Ä¶ pero por ahora pretendamos que sabemos lo que hacemos. Visita este link si quieres &lt;a href=&quot;https://waterhouse.ucdavis.edu/whats-in-wine&quot; target=&quot;_blank&quot;&gt;una ligera introducci√≥n a los componentes del vino&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;antes-de-continuar-Ô∏è&quot;&gt;Antes de continuar ‚ö†Ô∏è&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Si lo que est√°s esperando hacer con la informaci√≥n es crear un modelo predictivo, lo primero que hay que hacer es separar los datos en conjuntos de prueba, entrenamiento y, si puedes, validaci√≥n. El an√°lisis exploratorio de datos se debe conducir √∫nicamente sobre los datos de entrenamiento, ya que realizar el an√°lisis en todo el conjunto de datos nos llevar√≠a a tomar decisiones teniendo en cuenta datos a los que, en teor√≠a, tu modelo no tendr√≠a acceso en producci√≥n. Es decir, este es un problema de filtraci√≥n de datos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Teniendo esto en mente, vamos a separar nuestros datos con:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wine_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_quality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;completitud-en-los-datos&quot;&gt;Completitud en los datos&lt;/h2&gt;
&lt;p&gt;Antes de comenzar cualquier an√°lisis, es bueno revisar los datos para buscar informaci√≥n faltante; y en caso de que la haya, es nuestra tarea decidir qu√© es lo que podemos hacer con esos registros faltantes. Con los dataframes de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandas&lt;/code&gt; podemos usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info&lt;/code&gt; para encontrar los datos faltantes: Tambi√©n podr√≠amos haber usado &lt;a href=&quot;https://github.com/ResidentMario/missingno&quot;&gt;missingno&lt;/a&gt; para tener una representaci√≥n visual de esta informaci√≥n.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wine_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y as√≠ es c√≥mo se ve a la salida:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
Int64Index: 1199 entries, 1060 to 418
Data columns (total 12 columns):
fixed acidity           1199 non-null float64
volatile acidity        1199 non-null float64
citric acid             1199 non-null float64
residual sugar          1199 non-null float64
chlorides               1199 non-null float64
free sulfur dioxide     1199 non-null float64
total sulfur dioxide    1199 non-null float64
density                 1199 non-null float64
pH                      1199 non-null float64
sulphates               1199 non-null float64
alcohol                 1199 non-null float64
quality                 1199 non-null int64
dtypes: float64(11), int64(1)
memory usage: 121.8 KB
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
Int64Index: 400 entries, 1186 to 1163
Data columns (total 12 columns):
fixed acidity           400 non-null float64
volatile acidity        400 non-null float64
citric acid             400 non-null float64
residual sugar          400 non-null float64
chlorides               400 non-null float64
free sulfur dioxide     400 non-null float64
total sulfur dioxide    400 non-null float64
density                 400 non-null float64
pH                      400 non-null float64
sulphates               400 non-null float64
alcohol                 400 non-null float64
quality                 400 non-null int64
dtypes: float64(11), int64(1)
memory usage: 40.6 KB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y pues no, no hay datos faltantes‚Ä¶ sin embargo si faltaran, debes saber que existe toda una metodolog√≠a para decidir c√≥mo actuar ante datos faltantes en nuestro &lt;em&gt;dataset&lt;/em&gt;. Pero de eso podemos hablar en otro momento.&lt;/p&gt;

&lt;h2 id=&quot;estad√≠sticas-descriptivas&quot;&gt;Estad√≠sticas descriptivas&lt;/h2&gt;

&lt;p&gt;El segundo paso a dar, es ver las estad√≠sticas descriptivas de nuestra informaci√≥n, esto nos ayudar√° a darnos una idea de los posibles valores de nuestro dataset. El paquete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandas&lt;/code&gt; ofrece el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;describe&lt;/code&gt; para obtener una vista detallada y completa de algunas de las estad√≠sticas m√°s comunes:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;fixed acidity&lt;/th&gt;
      &lt;th&gt;volatile acidity&lt;/th&gt;
      &lt;th&gt;citric acid&lt;/th&gt;
      &lt;th&gt;residual sugar&lt;/th&gt;
      &lt;th&gt;chlorides&lt;/th&gt;
      &lt;th&gt;free sulfur dioxide&lt;/th&gt;
      &lt;th&gt;total sulfur dioxide&lt;/th&gt;
      &lt;th&gt;density&lt;/th&gt;
      &lt;th&gt;pH&lt;/th&gt;
      &lt;th&gt;sulphates&lt;/th&gt;
      &lt;th&gt;alcohol&lt;/th&gt;
      &lt;th&gt;quality&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
      &lt;td&gt;1199.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;8.309174&lt;/td&gt;
      &lt;td&gt;0.525847&lt;/td&gt;
      &lt;td&gt;0.269867&lt;/td&gt;
      &lt;td&gt;2.574604&lt;/td&gt;
      &lt;td&gt;0.088136&lt;/td&gt;
      &lt;td&gt;15.820267&lt;/td&gt;
      &lt;td&gt;46.194329&lt;/td&gt;
      &lt;td&gt;0.996755&lt;/td&gt;
      &lt;td&gt;3.312035&lt;/td&gt;
      &lt;td&gt;0.664120&lt;/td&gt;
      &lt;td&gt;10.436614&lt;/td&gt;
      &lt;td&gt;5.637198&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;1.758086&lt;/td&gt;
      &lt;td&gt;0.177889&lt;/td&gt;
      &lt;td&gt;0.194103&lt;/td&gt;
      &lt;td&gt;1.448308&lt;/td&gt;
      &lt;td&gt;0.049179&lt;/td&gt;
      &lt;td&gt;10.559120&lt;/td&gt;
      &lt;td&gt;32.648521&lt;/td&gt;
      &lt;td&gt;0.001879&lt;/td&gt;
      &lt;td&gt;0.156249&lt;/td&gt;
      &lt;td&gt;0.177114&lt;/td&gt;
      &lt;td&gt;1.075123&lt;/td&gt;
      &lt;td&gt;0.802324&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;4.600000&lt;/td&gt;
      &lt;td&gt;0.120000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.900000&lt;/td&gt;
      &lt;td&gt;0.012000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;0.990070&lt;/td&gt;
      &lt;td&gt;2.740000&lt;/td&gt;
      &lt;td&gt;0.330000&lt;/td&gt;
      &lt;td&gt;8.400000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;7.100000&lt;/td&gt;
      &lt;td&gt;0.390000&lt;/td&gt;
      &lt;td&gt;0.090000&lt;/td&gt;
      &lt;td&gt;1.900000&lt;/td&gt;
      &lt;td&gt;0.070000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.995600&lt;/td&gt;
      &lt;td&gt;3.210000&lt;/td&gt;
      &lt;td&gt;0.560000&lt;/td&gt;
      &lt;td&gt;9.500000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;7.900000&lt;/td&gt;
      &lt;td&gt;0.520000&lt;/td&gt;
      &lt;td&gt;0.260000&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;0.079000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;37.000000&lt;/td&gt;
      &lt;td&gt;0.996800&lt;/td&gt;
      &lt;td&gt;3.310000&lt;/td&gt;
      &lt;td&gt;0.620000&lt;/td&gt;
      &lt;td&gt;10.200000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;9.200000&lt;/td&gt;
      &lt;td&gt;0.637500&lt;/td&gt;
      &lt;td&gt;0.420000&lt;/td&gt;
      &lt;td&gt;2.600000&lt;/td&gt;
      &lt;td&gt;0.091000&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;61.500000&lt;/td&gt;
      &lt;td&gt;0.997820&lt;/td&gt;
      &lt;td&gt;3.400000&lt;/td&gt;
      &lt;td&gt;0.735000&lt;/td&gt;
      &lt;td&gt;11.100000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;15.900000&lt;/td&gt;
      &lt;td&gt;1.330000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;15.500000&lt;/td&gt;
      &lt;td&gt;0.611000&lt;/td&gt;
      &lt;td&gt;72.000000&lt;/td&gt;
      &lt;td&gt;278.000000&lt;/td&gt;
      &lt;td&gt;1.003690&lt;/td&gt;
      &lt;td&gt;4.010000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;14.900000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De este resumen estad√≠stico, una de las primeras cosas que podr√≠an resultar extra√±as es que la variable &lt;strong&gt;quality&lt;/strong&gt; √∫nicamente toma valores entre $3$ y $8$ (a pesar de que en la descripci√≥n original dice que los valores van de $0$ a $10$. Lo cual representa un problema puesto que nuestro modelo predictivo no tendr√° ejemplos de vinos con una calidad de $0$ o de $10$, por ejemplo. Pero por el momento, no nos vamos a preocupar mucho por eso.&lt;/p&gt;

&lt;p&gt;Tambi√©n tengo que decir que algun conocedor del tema podr√≠a tener opiniones acerca de los rangos de valores que cubren ciertas variables‚Ä¶ pero nosotros vamos a pasar al an√°lisis gr√°fico.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;histogramas&quot;&gt;Histogramas&lt;/h3&gt;
&lt;p&gt;Primero podemos echarle un ojo a la distribuci√≥n de la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quality&lt;/code&gt;, que como ya sabemos que es una variable discreta y que los valores van, en teor√≠a de 0 a 10, podemos simplemente usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;countplot&lt;/code&gt; del m√≥dulo &lt;em&gt;seaborn&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Counts of `qualuty`&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Quality&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;countplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;quality&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/FFFtlJm.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como puedes ver, nuestro conjunto de datos est√° desbalanceado, con muchos mas $5$ y $6$ que cualquier otro valor.&lt;/p&gt;

&lt;p&gt;Ahora lo que podemos hacer es revisar algunas otras distribuciones, ahora s√≠, usando histogramas:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fixed Acidity distribution&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Acidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;volatile acidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/QnXb6u0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos usar un poco de c√≥digo para visualizar m√°s de una variable a la vez:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fixed acidity'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'volatile acidity'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'citric acid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'residual sugar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'chlorides'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'free sulfur dioxide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total sulfur dioxide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'density'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'pH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sulphates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alcohol'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'quality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tight_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ZoAJMQa.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta gr√°fica podemos ver que muchas de las variables tienen una distribuci√≥n asim√©trica (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fixed acidity&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;residual sugar&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chlorides&lt;/code&gt;, por ejemplo), adem√°s de que al parecer algunos valores tienen valores extremos (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;residual sugar&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sulphates&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;total sulfur dioxide&lt;/code&gt;). Tal vez merezcan m√°s exploraci√≥n‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;boxplots&quot;&gt;Boxplots&lt;/h3&gt;
&lt;p&gt;Como mencion√© anteriormente, existen algunas variables que merecen un poco m√°s de exploraci√≥n ya que parecen tener valores extremos, las &lt;em&gt;boxplots&lt;/em&gt; nos permiten encontrar precisamente estos valores extremos. Es f√°cil graficar &lt;em&gt;boxplots&lt;/em&gt; con &lt;em&gt;seaborn&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fixed acidity'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'residual sugar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'chlorides'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'free sulfur dioxide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             &lt;span class=&quot;s&quot;&gt;'total sulfur dioxide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sulphates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'alcohol'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tight_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/zAGmjNX.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como ya sabemos, los puntos fuera de las l√≠neas horizontales son los famosos &lt;em&gt;outliers&lt;/em&gt; o ‚Äúvalores at√≠picos‚Äù, dependiendo de la aplicaci√≥n podemos reaccionar de diversas maneras frente a ellos‚Ä¶ a veces los &lt;em&gt;outliers&lt;/em&gt; se eliminan, a veces se transforman, o a veces se dejan porque tienen alto valor predictivo.&lt;/p&gt;

&lt;h3 id=&quot;scatterplots&quot;&gt;Scatterplots&lt;/h3&gt;
&lt;p&gt;El siguiente paso es tratar de identificar relaciones entre variables, podr√≠amos por ejemplo usar un &lt;em&gt;scatterplot&lt;/em&gt; para ver qu√© tipo de relaci√≥n existe entre la cantidad de alcohol y la calidad de un vino:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alcohol - Quality scatterplot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alcohol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Quality&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatterplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alcohol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;quality&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/GRULpvb.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tal vez esta gr√°fica no sea tan reveladora, ya que nuestra variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quality&lt;/code&gt; es m√°s bien del tipo categ√≥rico y es dif√≠cil identificar una tendencia. Otra cosa a notar es que las correlaciones tambi√©n se pueden y, en la mayor√≠a de los casos, se deben identificar entre las variables independientes tambi√©n, no solo entre una de ellas y la variable dependiente. Por ejemplo, entre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;free sulfur dioxide&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;total sulfur dioxide&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Free Sulfur Dioxide - Total Sulfur Dioxide scatterplot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Free Sulfur Dioxide&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Total Sulfur Dioxide&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatterplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;free sulfur dioxide&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;total sulfur dioxide&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/HfdtXwC.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En esta gr√°fica si se puede observar una clara relaci√≥n entre las variables, ¬øcierto?&lt;/p&gt;

&lt;p&gt;Si quieres ver solamente el grado de correlaci√≥n (sin necesidad de tratar de encontrarlo tu mismo desde una &lt;em&gt;scatterplot&lt;/em&gt;) tambi√©n podemos hacer uso de las matrices de correlaci√≥n.&lt;/p&gt;

&lt;h3 id=&quot;matrices-de-correlaci√≥n&quot;&gt;Matrices de correlaci√≥n&lt;/h3&gt;
&lt;p&gt;Una matriz de correlaci√≥n no es m√°s que una matriz de n√∫meros (cada n√∫mero va de -1 a 1) que nos indican qu√© tan relacionadas est√°n una variable con otra. Existen &lt;a href=&quot;https://datascience.stackexchange.com/a/64261&quot;&gt;3 m√©todos&lt;/a&gt; para calcular esta correlaci√≥n. Para calcularla en nuestro dataframe de vinos, podemos simplemente usar el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corr&lt;/code&gt; de un &lt;em&gt;dataframe&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;correlation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wine_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pearson&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;correlation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;fixed acidity&lt;/th&gt;
      &lt;th&gt;volatile acidity&lt;/th&gt;
      &lt;th&gt;citric acid&lt;/th&gt;
      &lt;th&gt;residual sugar&lt;/th&gt;
      &lt;th&gt;chlorides&lt;/th&gt;
      &lt;th&gt;free sulfur dioxide&lt;/th&gt;
      &lt;th&gt;total sulfur dioxide&lt;/th&gt;
      &lt;th&gt;density&lt;/th&gt;
      &lt;th&gt;pH&lt;/th&gt;
      &lt;th&gt;sulphates&lt;/th&gt;
      &lt;th&gt;alcohol&lt;/th&gt;
      &lt;th&gt;quality&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;fixed acidity&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-0.237044&lt;/td&gt;
      &lt;td&gt;0.675747&lt;/td&gt;
      &lt;td&gt;0.164493&lt;/td&gt;
      &lt;td&gt;0.091213&lt;/td&gt;
      &lt;td&gt;-0.167011&lt;/td&gt;
      &lt;td&gt;-0.102002&lt;/td&gt;
      &lt;td&gt;0.681653&lt;/td&gt;
      &lt;td&gt;-0.692635&lt;/td&gt;
      &lt;td&gt;0.152724&lt;/td&gt;
      &lt;td&gt;-0.075869&lt;/td&gt;
      &lt;td&gt;0.128048&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;volatile acidity&lt;/th&gt;
      &lt;td&gt;-0.237044&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-0.543960&lt;/td&gt;
      &lt;td&gt;-0.011115&lt;/td&gt;
      &lt;td&gt;0.063904&lt;/td&gt;
      &lt;td&gt;-0.015815&lt;/td&gt;
      &lt;td&gt;0.088772&lt;/td&gt;
      &lt;td&gt;0.031415&lt;/td&gt;
      &lt;td&gt;0.220483&lt;/td&gt;
      &lt;td&gt;-0.248910&lt;/td&gt;
      &lt;td&gt;-0.209193&lt;/td&gt;
      &lt;td&gt;-0.389654&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;citric acid&lt;/th&gt;
      &lt;td&gt;0.675747&lt;/td&gt;
      &lt;td&gt;-0.543960&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.149428&lt;/td&gt;
      &lt;td&gt;0.225910&lt;/td&gt;
      &lt;td&gt;-0.078811&lt;/td&gt;
      &lt;td&gt;0.004797&lt;/td&gt;
      &lt;td&gt;0.376603&lt;/td&gt;
      &lt;td&gt;-0.545874&lt;/td&gt;
      &lt;td&gt;0.314076&lt;/td&gt;
      &lt;td&gt;0.109625&lt;/td&gt;
      &lt;td&gt;0.241375&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;residual sugar&lt;/th&gt;
      &lt;td&gt;0.164493&lt;/td&gt;
      &lt;td&gt;-0.011115&lt;/td&gt;
      &lt;td&gt;0.149428&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.059603&lt;/td&gt;
      &lt;td&gt;0.170785&lt;/td&gt;
      &lt;td&gt;0.162121&lt;/td&gt;
      &lt;td&gt;0.390897&lt;/td&gt;
      &lt;td&gt;-0.114692&lt;/td&gt;
      &lt;td&gt;0.021992&lt;/td&gt;
      &lt;td&gt;0.037932&lt;/td&gt;
      &lt;td&gt;0.026566&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;chlorides&lt;/th&gt;
      &lt;td&gt;0.091213&lt;/td&gt;
      &lt;td&gt;0.063904&lt;/td&gt;
      &lt;td&gt;0.225910&lt;/td&gt;
      &lt;td&gt;0.059603&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.003828&lt;/td&gt;
      &lt;td&gt;0.061718&lt;/td&gt;
      &lt;td&gt;0.192486&lt;/td&gt;
      &lt;td&gt;-0.284091&lt;/td&gt;
      &lt;td&gt;0.391324&lt;/td&gt;
      &lt;td&gt;-0.222979&lt;/td&gt;
      &lt;td&gt;-0.133884&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Luego, para graficar estos n√∫meros podemos usar un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heatmap&lt;/code&gt; de &lt;em&gt;seaborn&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Free Sulfur Dioxide - Total Sulfur Dioxide scatterplot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heatmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;correlation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'coolwarm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;annot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/oKpJmEe.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Los colores m√°s intensos corresponden con n√∫meros cercanos a -1 o 1, que indican que tienen mayor relaci√≥n entre ellas, por ejemplo, la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pH&lt;/code&gt; con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fixed acidity&lt;/code&gt; (que tienen una relaci√≥n inversa) o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;density&lt;/code&gt; con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fixed acidity&lt;/code&gt; que de igual manera, presenta una relaci√≥n, pero en este caso, directa.&lt;/p&gt;

&lt;p&gt;Y pues, eso es todo por este post, s√≠, es bastante sencillo y a√∫n hay mucho qu√© discutir sobre el an√°lisis exploratorio de datos, aqu√≠ hay algunos de los recursos que yo consult√© para preparar este video, y a√∫n as√≠ hay mucho m√°s por explorar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section1/eda1.htm&quot; target=&quot;_blank&quot;&gt;EDA Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/a-gentle-introduction-to-exploratory-data-analysis-f11d843b8184&quot; target=&quot;_blank&quot;&gt;A Gentle Introduction to Exploratory Data Analysis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://r4ds.had.co.nz/exploratory-data-analysis.html&quot; target=&quot;_blank&quot;&gt;Exploratory Data Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No olvides seguirme en twitter en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="tutoriales" />
      
        <category term="python" />
      
        <category term="eda" />
      

      
        <summary type="html">En este post les voy a dar una peque√±√≠sima introducci√≥n al an√°lisis exploratorio de datos o EDA por sus siglas en ingl√©s (Exploratory Data Analysis).</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Probando nuestro c√≥digo con pytest</title>
      <link href="https://old.tacosdedatos.com/pruebas-unitarias-pytest" rel="alternate" type="text/html" title="Probando nuestro c√≥digo con pytest" />
      <published>2020-05-12T10:00:00+00:00</published>
      <updated>2020-05-12T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/pruebas-unitarias-pytest</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/pruebas-unitarias-pytest">&lt;h4 id=&quot;aviso&quot;&gt;Aviso&lt;/h4&gt;
&lt;p&gt;A lo largo de este post estar√© probando las funciones del c√≥digo que escrib√≠ para el post sobre la &lt;a href=&quot;https://tacosdedatos.com/generacion-automatica-datasets&quot;&gt;generaci√≥n autom√°tica de datasets&lt;/a&gt;; sin embargo no es necesario que leas ese post primero, pero seguramente te ayudar√° a ponerle m√°s contexto al c√≥digo que aqu√≠ se presenta.&lt;/p&gt;

&lt;h2 id=&quot;qu√©-es-pytest&quot;&gt;¬øQu√© es &lt;em&gt;pytest&lt;/em&gt;?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;pytest&lt;/em&gt; es un &lt;em&gt;framework&lt;/em&gt; para Python que ofrece la recolecci√≥n autom√°tica de los &lt;em&gt;tests&lt;/em&gt;, aserciones simples, soporte para &lt;em&gt;fixtures&lt;/em&gt;, &lt;em&gt;debugeo&lt;/em&gt; y mucho m√°s‚Ä¶ no te preocupes si algunas de estas palabras no te hacen mucho sentido; intentar√© aclararlos m√°s adelante a lo largo de este post.&lt;/p&gt;

&lt;p&gt;Por cierto, &lt;em&gt;pytest&lt;/em&gt; no es el √∫nico &lt;em&gt;framework&lt;/em&gt; disponible; tambi√©n est√° &lt;em&gt;nose&lt;/em&gt;, &lt;em&gt;doctest&lt;/em&gt;, &lt;em&gt;testify&lt;/em&gt;‚Ä¶ pero &lt;em&gt;pytest&lt;/em&gt; es el que uso y de el que conozco m√°s.&lt;/p&gt;

&lt;p&gt;Para obtener &lt;em&gt;pytest&lt;/em&gt; lo puedes descargar desde PyPI con tu gestor de paquetes de elecci√≥n:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;pytest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;escribiendo-nuestros-tests&quot;&gt;Escribiendo nuestros &lt;em&gt;tests&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Para escribir las pruebas es necesario escribir funciones que comiencen con el prefijo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt;. Es necesario que las llamemos as√≠ ya que al momento de ejecutar &lt;em&gt;pytest&lt;/em&gt; debemos especificar un directorio ra√≠z, a partir de este directorio &lt;em&gt;pytest&lt;/em&gt; leer√° todos los archivos buscando funciones que comiencen con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt;. Por ejemplo, si miras el &lt;a href=&quot;https://github.com/fferegrino/medium-collector&quot;&gt;repositorio de &lt;em&gt;medium-collector&lt;/em&gt;&lt;/a&gt;, ver√°s que todos los &lt;em&gt;tests&lt;/em&gt; est√°n contenidos dentro de un folder apropiadamente llamado &lt;em&gt;tests&lt;/em&gt;. Para ejecutar todas las pruebas, lo que tenemos que hacer es ejecutar &lt;em&gt;pytest&lt;/em&gt; con esta carpeta como argumento:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pytest tests/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;parametrizando-nuestras-pruebas&quot;&gt;Parametrizando nuestras pruebas&lt;/h2&gt;
&lt;p&gt;Comencemos por escribir un test sencillo: una sola entrada, una sola salida. y sin llamadas a servicios externos. Me refiero a una funci√≥n que toma una cadena codificada (como esta: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=?UTF-8?B?VGhlcmXigJlz?= more to the story&lt;/code&gt;) y regresa otra cadena (como esta: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;There‚Äôs more to the story&lt;/code&gt;), en este caso estoy hablando sobre la funci√≥n &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/medium_collector/download/parser.py#L12&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_subject&lt;/code&gt; method&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject_parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subjects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subjects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;subject_parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;utf8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;subject_parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject_parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para escribir una prueba unitaria es tan ‚Äúsimple‚Äù como hacer esto:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;There's more to the story&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;=?UTF-8?B?VGhlcmXigJlz?= more to the story&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sin embargo, esta funcion necesita ser probada con el caso en donde toda la cadena est√° codificada, o el caso en donde no lo est√°. Para cubrir estos casos tendr√≠amos que escribir m√©todos como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_get_subject_all_encoded&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_get_subject_none_encoded&lt;/code&gt;, pero eso ser√≠a una duplicaci√≥n absurda de c√≥digo, para solucionar este problema de &lt;strong&gt;probar el mismo c√≥digo con m√∫ltiples valores de entrada&lt;/strong&gt; podemos hacer uso de la &lt;strong&gt;parametrizaci√≥n&lt;/strong&gt; usando el decorador &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@pytest.mark.parametrize&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pytest&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parametrize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input_subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;expected&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Input 1
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;=?UTF-8?B?V2hlbiBhICQxMDAsMDAwIFNhbGFyeSBJc27igJl0IEVub3VnaCB8IEFkYW0gUGFyc29ucyBpbiBNYWtpbmcgb2YgYSBNaWxsaW8=?= =?UTF-8?B?bmFpcmU=?=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;When a $100,000 Salary Isn‚Äôt Enough | Adam Parsons in Making of a Millionaire&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Input 2
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;=?UTF-8?B?VGhlcmXigJlz?= more to the story&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;&quot;There‚Äôs more to the story&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Input 3
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;7 Things Rich People Advise But Never Do | David O. in The Startup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;7 Things Rich People Advise But Never Do | David O. in The Startup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El c√≥digo anterior le indica a &lt;em&gt;pytest&lt;/em&gt; que ejecute la prueba &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_get_subject&lt;/code&gt; tres veces, cada una reemplazando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input_subject&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expected&lt;/code&gt; con sus valores correspondientes especificados en el segundo argumento de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parametrize&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fixtures&quot;&gt;Fixtures&lt;/h2&gt;
&lt;p&gt;En algunas ocasiones tal vez tengamos &lt;strong&gt;pruebas que comiencen desde cierto estado&lt;/strong&gt;, este estado puede ser tener datos en una base de datos, tener archivos en alguna carpeta, o tal vez simplemente tener el objeto correcto como entrada a la funci√≥n; es ah√≠ donde las &lt;em&gt;fixtures&lt;/em&gt; son √∫tiles.&lt;/p&gt;

&lt;p&gt;Por ejemplo, en el repositorio de &lt;em&gt;medium-colletor&lt;/em&gt; hay una funci√≥n llamada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parse_mail&lt;/code&gt; que, como el nombre lo sugiere, podemos usar para extraer informaci√≥n de un objeto de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email.message.Message&lt;/code&gt;. Esta es una versi√≥n simplificada de la implementaci√≥n del m√©todo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message-ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;To&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;From&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para probar esta funci√≥n necesitamos un objeto de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Message&lt;/code&gt;, pero en realidad no quiero tener que conectarme a nuestro servidor de email cada vez que ejecutemos la prueba; este es el escenario perfecto para usar una &lt;em&gt;fixture&lt;/em&gt;. Para definir una, tenemos que isar algo como el siguiente c√≥digo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixture&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dummy_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEMultipart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alternative&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Link&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;From&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;you@this.com&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;To&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;me@that.com&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message-ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%a, %d %b %Y %H:%M:%S +0000 (UTC)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hi!&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lo primero que hay que notar es que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@pytest.fixture&lt;/code&gt; es usado como decorador de‚Ä¶ ¬ø¬°una funci√≥n!? S√≠, as√≠ es, una &lt;em&gt;fixture&lt;/em&gt; no es nada m√°s que una funci√≥n cuyo valor de retorno debe ser el valor que queremos que esa &lt;em&gt;fixture&lt;/em&gt; tenga. En este caso, el valor de nuestra &lt;em&gt;fixture&lt;/em&gt; ser√° un objeto de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MIMEMultipart&lt;/code&gt; que hereda de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Message&lt;/code&gt; que es justo lo que queremos.&lt;/p&gt;

&lt;p&gt;Ahora, para usar nuestra &lt;em&gt;fixture&lt;/em&gt; llamada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dummy_mail&lt;/code&gt; en nuestra prueba es suficiente con pasarla como argumento en nuestra funci√≥n de prueba:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dummy_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expected_mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ad841b37bd4b9b5403b575432f67f5ed2d68ed40&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a4747a50dad63531704f5ab32509bb0c60b7350f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;you@this.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Link&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dummy_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected_mail_info&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;Hi!&amp;lt;br&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cuando ejecutamos &lt;em&gt;pytest&lt;/em&gt;, este tratar√° de resolverlas antes de que se ejecute cualquier prueba que las use, y una ves que estas est√©n listas, los m√©todos de prueba reciben los valores especificados en cada m√©todo asociado. Este mecanismo permite algunos otros usos interesantes de los que hablar√© m√°s adelante.&lt;/p&gt;

&lt;h3 id=&quot;una-caracter√≠stica-extra-de-las-fixtures&quot;&gt;Una caracter√≠stica extra de las &lt;em&gt;fixtures&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Las &lt;em&gt;fixtures&lt;/em&gt; de &lt;em&gt;pytest&lt;/em&gt; son geniales, y otro de sus usos es cuando queremos reutilizar el mismo fragmento de c√≥digo en dos o m√°s funciones de prueba. Imagina que necesitamos usar un objeto de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Message&lt;/code&gt; para dos pruebas. Podr√≠amos haber declarado una variable global, digamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MESSAGE = MIMEMultipart(&quot;alternative&quot;)&lt;/code&gt; y despu√©s usarla en nuestros m√©todos as√≠:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_parse_mail_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...
&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_parse_mail_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pero en este caso, ambos tests estar√≠an usando la misma variable, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MESSAGE&lt;/code&gt; lo que significa que cualquier cambio hecho por &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_parse_mail_1&lt;/code&gt; afectar√≠a el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MESSAGE&lt;/code&gt; que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_parse_mail_2&lt;/code&gt; recibe, esto rompe el prop√≥sito de las pruebas unitarias, ya que nuestros &lt;em&gt;tests&lt;/em&gt; no estar√≠an aislados. Sin embargo, cuando usamos &lt;em&gt;fixtures&lt;/em&gt;, cada funci√≥n de prueba recibe una copia nueva de lo que sea que regrese nuestra funci√≥n marcada con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@pytest.fixture&lt;/code&gt;, haciendo f√°cil y sencillo usarlas una y otra vez.&lt;/p&gt;

&lt;h2 id=&quot;patching&quot;&gt;Patching&lt;/h2&gt;
&lt;p&gt;Sin lugar a dudas, algunas partes de nuestro c√≥digo depender√°n de librer√≠as de terceros o a servicios externos que no queremos ejecutar o contactar cuando ejecutamos nuestras pruebas. Ya sea porque la librer√≠a que estamos usando consume muchos recursos o es un sistema productivo que no deber√≠a ser tocado durante las pruebas, aqu√≠ es cuando el &lt;strong&gt;patching&lt;/strong&gt; brilla por su utilidad; este nos ayuda a &lt;strong&gt;reemplazar el comportamiento (o valores de retorno) de una llamada a una funci√≥n&lt;/strong&gt; con lo que nosotros dispongamos.&lt;/p&gt;

&lt;p&gt;Imagina que la funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_html&lt;/code&gt; contiene c√≥digo que es muy &lt;em&gt;‚Äúcostoso‚Äù&lt;/em&gt; ejecutar, y no lo queremos que este c√≥digo se ejecute cada vez que llamamos al test &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_parse_mail&lt;/code&gt;, entonces podemos &lt;em&gt;parcharlo&lt;/em&gt; (tengo que decir que el &lt;em&gt;patching&lt;/em&gt; no es una funcionalidad de &lt;em&gt;pytest&lt;/em&gt; si no que viene con Python por default).&lt;/p&gt;

&lt;p&gt;Hay dos formas de &lt;em&gt;‚Äúparchar‚Äù&lt;/em&gt; nuestro c√≥digo: una de ellas es haciendo uso de la instrucci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt;, pasando el nombre completo de la funci√≥n que queremos &lt;em&gt;‚Äúparchar‚Äù&lt;/em&gt;. Un test que aplica un &lt;em&gt;patch&lt;/em&gt; a la funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_html&lt;/code&gt; dentro de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parse_email&lt;/code&gt; se ver√≠a as√≠:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;unittest.mock&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dummy_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expected_mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ad841b37bd4b9b5403b575432f67f5ed2d68ed40&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# ...
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;medium_collector.download.parser.get_html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;return_value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dummy_mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;patched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assert_called_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected_mail_info&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En el fragmento anterior estamos &lt;em&gt;‚Äúparchando‚Äù&lt;/em&gt; la funci√≥n y estableciendo el valor de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Hello&quot;&lt;/code&gt; como su valor de retorno con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return_value&lt;/code&gt;. Esto significa que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Hello&quot;&lt;/code&gt; ser√° regresado cada vez que la funci√≥n es ejecutada. Ahora que la funci√≥n original no es realmente ejecutada, es importante que nos cercioremos que nuestro c√≥digo est√° llamando a esta funci√≥n, para esto podemos utilizar el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert_called_once&lt;/code&gt; para verificar que lo hemos llamado.&lt;/p&gt;

&lt;h3 id=&quot;los-peligros-del-patching&quot;&gt;Los peligros del &lt;em&gt;patching&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;El &lt;em&gt;parcheo&lt;/em&gt; podr√≠a parecer una soluci√≥n f√°cil para evitar conectarse con servicios externos o llamadas a funciones costosas. Pero debes tener en cuenta que cuando &lt;em&gt;parchamos&lt;/em&gt; algo, estamos asumiendo muchas cosas sobre el c√≥digo que estamos &lt;em&gt;parchando&lt;/em&gt;, estas asunciones son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sabemos el comportamiento esperado del c√≥digo que estamos &lt;em&gt;parchando&lt;/em&gt;, es decir, sabemos sus valores de retorno y bajo que circunstancias falla.&lt;/li&gt;
  &lt;li&gt;Puedes, con completa seguridad, regresar un objeto que se comporte como el valor que originalmente ser√≠a retornado por la funci√≥n real.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cuando aplicas un parche a una funci√≥n, toma en cuenta que esta puede retornar un valor ‚Äúcomplejo‚Äù que sea dif√≠cil de reproducir, y que &lt;em&gt;‚Äúparcharlo‚Äù&lt;/em&gt; mal resultar√≠a en tu c√≥digo siendo probado ante un escenario que nunca ocurrir√° en la vida real. Para evitar esto, tal vez tengas que examinar muy a detalla cuales son los valores de retorno de lo que est√°s &lt;em&gt;‚Äúparchando‚Äù&lt;/em&gt; con el fin de hacerlo correctamente.&lt;/p&gt;

&lt;p&gt;Otro problema muy com√∫n con el &lt;em&gt;patching&lt;/em&gt; es que en nos podemos dejar llevar y terminar &lt;em&gt;‚Äúparchando‚Äù&lt;/em&gt; todo‚Ä¶ lo que, a final de cuentas nos pone en la situaci√≥n de estar probando nuestro c√≥digo en escenarios poco realistas. Si en alg√∫n momento te encuentras haciendo esto, es mejor que te detengas y reconsideres si las pruebas unitarias son la mejor soluci√≥n para probar tu c√≥digo‚Ä¶ tal vez las pruebas de integraci√≥n sean una mejor soluci√≥n para tu problema de &lt;em&gt;testing&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fixtures-avanzadas&quot;&gt;&lt;em&gt;Fixtures&lt;/em&gt; avanzadas&lt;/h2&gt;
&lt;p&gt;Como lo mencion√© anteriormente, la forma en la que &lt;em&gt;pytest&lt;/em&gt; resuelve las &lt;em&gt;fixtures&lt;/em&gt; puede ser usada para darle a nuestro c√≥digo m√°s flexibilidad. En el repositorio de &lt;em&gt;medium-collector&lt;/em&gt; hay una funci√≥n que carga algunos archivos a un &lt;em&gt;bucket&lt;/em&gt; de S3 usando la librer√≠a &lt;em&gt;boto&lt;/em&gt;, esta es la funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload_files&lt;/code&gt;, que se ve m√°s o menos as√≠:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upload_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ACCESS_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;aws_secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SECRET_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eu-west-2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Claro que no quero estar conect√°ndome a AWS cada vez que ejecuto las pruebas; aqu√≠ es donde la librer√≠a &lt;em&gt;moto&lt;/em&gt; aparece para rescatarme. En palabras de sus creadores: &lt;em&gt;‚ÄúMoto es una librer√≠a que permite que tus tests f√°cilmente finjan comunicarse con servicios de AWS‚Äù&lt;/em&gt;. La forma en la que ellos sugieren usarla es a trav√©s de un manejador de contexto:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_my_model_save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock_s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'us-east-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para probar nuestra funci√≥n debemos cumplir dos condiciones antes de llamar a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload_files&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Imitar S3; no queremos estar conect√°ndonos a AWS en nuestras pruebas unitarias,&lt;/li&gt;
  &lt;li&gt;Tener un &lt;em&gt;bucket&lt;/em&gt; que ya exista; nuestro c√≥digo asume que uno ya existe&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Para lograr estas dos cosas con un &lt;em&gt;fixture&lt;/em&gt; podemos hacer algo como esto:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixture&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;my_special_bucket&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pytest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixture&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mock_storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock_s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eu-east-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Esta &lt;em&gt;fixture&lt;/em&gt; es, en realidad, una funci√≥n (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inner&lt;/code&gt;) que gracias al decorador &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contextmanager&lt;/code&gt; podemos llamar con la instrucci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt;. En t√©rminos de la implementaci√≥n puedes ver que estamos usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mock_s3&lt;/code&gt; como lo recomiendan los desarrolladores de &lt;em&gt;moto&lt;/em&gt;, dentro de este contexto creamos un cliente de &lt;em&gt;boto3&lt;/em&gt;, luego, dependiendo de un par√°metro pasado a nuestra funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inner&lt;/code&gt; decidimos si creamos o no la &lt;em&gt;bucket&lt;/em&gt;; por √∫ltimo, y como este se trata de un manejador de contexto usamos la instrucci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yield&lt;/code&gt; que le indicar√° a &lt;em&gt;pytest&lt;/em&gt; que nuestra &lt;em&gt;fixture&lt;/em&gt; est√° lista para ser usada.&lt;/p&gt;

&lt;p&gt;Ah, no s√© si te diste cuenta, pero &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mock_storage&lt;/code&gt; toma como argumento otra &lt;em&gt;fixture&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bucket&lt;/code&gt; en este caso). Esa es otra de las excelentes caracter√≠sticas de &lt;em&gt;pytest&lt;/em&gt;: permite crear ciertas dependencias entre nuestras &lt;em&gt;fixtures&lt;/em&gt;, y esta es resuleta antes de que se ejecuten nuestras pruebas.&lt;/p&gt;

&lt;p&gt;Ahora s√≠, estamos listos a probar nuestra funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload_files&lt;/code&gt; con esta funci√≥n:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_upload_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock_storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mock_storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;upload_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eu-east-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_objects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Contents&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;practica&quot;&gt;¬°Practica!&lt;/h2&gt;
&lt;p&gt;Me hubiera encantado preparar un notebook o cualquier otra forma de entorno interactivo que pudieras usar para jugar y experimentar un poco con los &lt;em&gt;tests&lt;/em&gt;, pero creo que para este tema, es mejor que te ensucies las manos con un poco de c√≥digo verdadero. Te invito a que descargues el c√≥digo de la aplicaci√≥n &lt;a href=&quot;https://github.com/fferegrino/medium-collector&quot;&gt;&lt;em&gt;medium-collector&lt;/em&gt; repo&lt;/a&gt; y ejecutes los test por ti mism@.&lt;/p&gt;

&lt;h2 id=&quot;m√°s-all√°-de-las-pruebas-unitarias&quot;&gt;M√°s all√° de las pruebas unitarias&lt;/h2&gt;
&lt;p&gt;A pesar de que &lt;em&gt;pytest&lt;/em&gt; es fabuloso para realizar pruebas unitarias, nada nos detiene de usarlo para otras pruebas, a√∫n m√°s m√°s complejas; hablo de pruebas de integraci√≥n o tal vez hasta de &lt;em&gt;end-to-end&lt;/em&gt;. Con herramientas como &lt;em&gt;Docker&lt;/em&gt;, &lt;em&gt;localstack&lt;/em&gt; y otras m√°s, es posible crear un poderos &lt;em&gt;framework&lt;/em&gt; de pruebas para todos tus proyectos de Python. En un post futuro voy a hablar de c√≥mo es que se puede utilizar todo el poder de estas herramientas para crear un test de &lt;em&gt;end-to-end&lt;/em&gt;, as√≠ que aseg√∫rate de seguir el blog y de seguirme en Twitter en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="blog" />
      
        <category term="python" />
      
        <category term="pytest" />
      

      
        <summary type="html">Aviso A lo largo de este post estar√© probando las funciones del c√≥digo que escrib√≠ para el post sobre la generaci√≥n autom√°tica de datasets; sin embargo no es necesario que leas ese post primero, pero seguramente te ayudar√° a ponerle m√°s contexto al c√≥digo que aqu√≠ se presenta.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Creando animaciones con Python y matplotlib</title>
      <link href="https://old.tacosdedatos.com/animaciones-matplotlib" rel="alternate" type="text/html" title="Creando animaciones con Python y matplotlib" />
      <published>2020-04-05T10:00:00+00:00</published>
      <updated>2020-04-05T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/animaciones-matplotlib</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/animaciones-matplotlib">&lt;h2 id=&quot;creando-animaciones&quot;&gt;Creando animaciones&lt;/h2&gt;
&lt;p&gt;A veces, la forma en la que presentamos los datos podr√≠a ayudarnos a√∫n m√°s a contar la historia que representan. A veces esta forma puede tomar forma de una animaci√≥n, haciendo que la presentaci√≥n de los datos sea m√°s din√°mica y m√°s entretenida.&lt;/p&gt;

&lt;p&gt;En este post te mostrar√© c√≥mo es que puedes animar tus gr√°ficas hechas con &lt;em&gt;matplotlib&lt;/em&gt; en Python; adem√°s usar√© &lt;em&gt;seaborn&lt;/em&gt; porque‚Ä¶ pues por que es bonito usarlo para graficar datos.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;https://colab.research.google.com/drive/1VbLzMGkbuKvdg7-CCTCSS_iODm6Ti5Sx&quot; target=&quot;_blank&quot;&gt;Aqu√≠ est√°&lt;/a&gt; el Colab con el c√≥digo que aqu√≠ muestro.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Importamos algunos paquetes:&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# pip install numpy
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# pip install pandas
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# pip install matplotlib
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;seaborn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# pip install seaborn
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;comenzando-por-el-final&quot;&gt;Comenzando por‚Ä¶ ¬øel final?&lt;/h3&gt;
&lt;p&gt;Una de las claves para realizar la animaci√≥n es comenzar por el final, s√≠, el final es la gr√°fica final que queremos mostrar; en mi caso, estar√© graficando una simple funci√≥n de distribuci√≥n (puedes verla ac√° debajo), pero tu informaci√≥n puede ser cualquier cosa, con suerte, algo m√°s √∫til.&lt;/p&gt;

&lt;p&gt;Los datos que vamos a graficar:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# C√≥digo para generar una funci√≥n de distribuci√≥n
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El resultado final de la gr√°fica:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cumulative Distribution&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/CFTusWs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El siguiente paso es definir cu√°l va a ser el inicio de nuestra animaci√≥n. En mi caso, yo quiero que la gr√°fica comience con un solo dato, del lado izquierdo de la gr√°fica. Y cada cuadro de la animaci√≥n ir√© agregando un nuevo punto. Por ejemplo, este ser√° el punto inicial:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/gFKAzse.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¬°Nada! ¬øuh? pues la cosa es que en la gr√°fica tiene un solo punto y como es una &lt;em&gt;lineplot&lt;/em&gt; que debe tener m√°s de un punto para que haya una l√≠nea entre ellos. Vamos a adelantarnos en el tiempo y graficar varios &lt;em&gt;frames&lt;/em&gt; en el tiempo, esta vez en la misma figura usando &lt;em&gt;subplots&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;timesteps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timesteps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timesteps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Frame &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/UpQAUg7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La idea clave es que en la animaci√≥n, cada &lt;em&gt;frame&lt;/em&gt; debe ser una gr√°fica ‚Äúnueva‚Äù, cuando presentamos una gr√°fica despu√©s de otra dar√° la ilusi√≥n de que la gr√°fica se est√° moviendo (s√≠, de la misma manera en la que im√°genes est√°ticas presentadas r√°pidamente crean un video).&lt;/p&gt;

&lt;p&gt;Como se ve en la gr√°fica de arriba, en este caso es m√°s que suficiente mover el &lt;em&gt;slice&lt;/em&gt; en incrementos para nuestras variables &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y &lt;/code&gt;, excepto que para la animaci√≥n no queremos graficar una a un lado de la otra, sino &lt;strong&gt;en lugar de la otra&lt;/strong&gt;. Para realizar esto, vamos a hacer uso de la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FuncAnimation&lt;/code&gt; dentro del m√≥dulo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib.animation&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.animation&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FuncAnimation&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para usarla, hay que crear una funci√≥n cuya responsabilidad es la de crear cada gr√°fica a cada &lt;em&gt;frame&lt;/em&gt;, generando la animaci√≥n. Esta funci√≥n recibe el n√∫mero del grame que se debe graficar; comenzando desde 0, (aunque adicionalmente nosotros le mandamos otro par√°metro llamado &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt; que es el &lt;em&gt;axes&lt;/em&gt; en donde vamos a graficar):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;De la funci√≥n anterior, solamente la primera l√≠nea deber√≠a ser ‚Äúnueva‚Äù para nosotros, la usamos para limpiar los &lt;em&gt;axes&lt;/em&gt;, si no realizamos este paso, cuando graficamos datos consecutivamente estar√≠amos graficando los datos del paso &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;&lt;/strong&gt; sobre los datos para el paso &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n - 1&lt;/code&gt;&lt;/strong&gt;. La l√≠nea &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sns.lineplot(x[:step], y[:step], ax = ax)&lt;/code&gt; es simplemente para graficar la funci√≥n.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;create_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y finalmente, por fin podemos usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FuncAnimation&lt;/code&gt;, pasando como par√°metros la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Figure&lt;/code&gt; en la que vamos a dibujar, la funci√≥n que estamos usando para dibujar, el n√∫mero de &lt;em&gt;frames&lt;/em&gt; (100 en este caso) y el &lt;em&gt;axes&lt;/em&gt; en el que vamos a dibujar, con el argumento &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fargs&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FuncAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya casi terminamos; solamente tenemos que generar nuestra animaci√≥n, podemos convertirla en una animaci√≥n en video, gif (usando el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;save&lt;/code&gt;) o algo que podemos abrir con html (usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;to_jshtml&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IPython.display&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTML&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# .gif necesita la librer√≠a imagemagick que puede ser instalada con !apt install imagemagick
# animation.save('poly.gif', writer='imagemagick', fps=20); 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'animation.mp4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ffmpeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_jshtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe style=&quot;border:none;&quot; src=&quot;https://mystifying-meitner-c75bce.netlify.com/animation.html&quot; width=&quot;100%&quot; height=&quot;380&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;small&gt;S√≠, puedes interactuar con la gr√°fica de arriba.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Y‚Ä¶ ¬°eso es todo! Solo para recordar el concepto principal: &lt;strong&gt;Piensa en tus animaciones como una serie de &lt;em&gt;frames&lt;/em&gt;, y luego piensa en cada &lt;em&gt;frame&lt;/em&gt; como una gr√°fica independiente&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bonus&quot;&gt;Bonus&lt;/h3&gt;
&lt;p&gt;Con un poco de trabajo extra se pueden hacer cosas un tanto m√°s complejas, como la animaci√≥n que muestro a continuaci√≥n (son distribuciones de probabilidad):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/8ON2Bq0.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No me voy a detener a hablar tanto del c√≥digo, pero lo dejo ah√≠ para que juegues con √©l. Me puedes contactar en los comentarios, o en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception en Twitter&lt;/a&gt; si tienes dudas sobre √©l.&lt;/p&gt;

&lt;p&gt;Nuevamente, el principio m√°s importante es pensar en la forma final de nuestra animaci√≥n, solo que en este caso tenemos cuatro posibles finales, que a su vez son 4 posibles principios‚Ä¶&lt;/p&gt;

&lt;p&gt;Comencemos por crear las distribuciones, tambi√©n hay que graficarlas para ver si logramos crearlas correctamente:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy.stats&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skewnorm&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cycle&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Create some distributions, with 1000 samples each one
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;distributions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;skewnorm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rvs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;skewnorm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rvs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;limits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;density&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distribution&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distributions&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Plot the distributions just to confirm we did the right thing
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distribution&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distributions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/c8T1Bap.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En este caso, cree las animaciones yo mismo, guardando los valores para cada punto de la gr√°fica en un arreglo llamado &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;frame_contents&lt;/code&gt; usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cycle&lt;/code&gt; para iterar sobre las distribuciones.&lt;/p&gt;

&lt;p&gt;Un truco bastante √∫til para animar la transici√≥n entre dos gr√°ficas de manera ‚Äúsuave‚Äù es utilizando la siguiente f√≥rmula:&lt;/p&gt;

&lt;p&gt;ùë•ùõº=ùõº‚àóùë•1+(1‚àíùõº)‚àóùë•0&lt;/p&gt;

&lt;p&gt;Para ir de ùë•0 a ùë•1, con un factor de ùõº, donde ùõº ‚àà [0,1]. Esta acci√≥n se puede observar en el segundo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt; dentro del ciclo principal:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;frame_contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;interpolations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wait_frames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cycle_distributions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cycle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cycle_distributions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cycle_distributions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait_frames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpolations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frame_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y, finalmente, usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FuncAnimation&lt;/code&gt; de nuevo podemos crear la animaci√≥n, cada vez graficando un valor diferente dentro de nuestro arreglo de valores &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;frame_contents&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_yticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    
&lt;span class=&quot;n&quot;&gt;frames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FuncAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_jshtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe style=&quot;border:none;&quot; src=&quot;https://mystifying-meitner-c75bce.netlify.com/multiplots.html&quot; width=&quot;100%&quot; height=&quot;450&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;small&gt;S√≠, puedes interactuar con la gr√°fica de arriba.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Y, ¬°ya est√°! ahora espero que puedas tu tambi√©n hacer animaciones para que tus datos te ayuden a contar historias m√°s interesantes y atractivas. Te recuerdo que me puedes contactar en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception en Twitter&lt;/a&gt; si tienes dudas sobre lo que aqu√≠ te cont√© o te interesa saber m√°s sobre Python o &lt;em&gt;matplotlib&lt;/em&gt;. Ah, &lt;strong&gt;&lt;a href=&quot;https://colab.research.google.com/drive/1VbLzMGkbuKvdg7-CCTCSS_iODm6Ti5Sx&quot;&gt;aqu√≠ est√°&lt;/a&gt; el Colab con el c√≥digo que aqu√≠ muestro&lt;/strong&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="blog" />
      
        <category term="python" />
      
        <category term="matplotlib" />
      

      
        <summary type="html">Creando animaciones A veces, la forma en la que presentamos los datos podr√≠a ayudarnos a√∫n m√°s a contar la historia que representan. A veces esta forma puede tomar forma de una animaci√≥n, haciendo que la presentaci√≥n de los datos sea m√°s din√°mica y m√°s entretenida.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Generando datasets de Kaggle autom√°ticamente</title>
      <link href="https://old.tacosdedatos.com/generacion-automatica-datasets" rel="alternate" type="text/html" title="Generando datasets de Kaggle autom√°ticamente" />
      <published>2020-03-11T10:00:00+00:00</published>
      <updated>2020-03-11T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/generacion-automatica-datasets</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/generacion-automatica-datasets">&lt;p&gt;S√© que Tacos de Datos est√° enfocado principalmente al resultado visual, pero creo que es importante tratar de resaltar qu√© es lo que hay detr√°s de. Quisiera inaugurar esta secci√≥n que llamar√© &lt;em&gt;‚ÄúDetr√°s de la visualizaci√≥n‚Äù&lt;/em&gt; para cubrir temas de extracci√≥n, procesamiento y almacenamiento de datos; en pocas palabras: ingenier√≠a de datos. &lt;em&gt;Y es que, adem√°s de preparar los tacos, tambi√©n es bueno saber c√≥mo conseguir los ingredientes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;PD: Mira cu√°l es el resultado de lo que estoy explicando aqu√≠: &lt;a href=&quot;https://www.kaggle.com/ioexception/medium-daily-digests&quot;&gt;Medium Daily Digests on Kaggle&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fuente-de-los-datos-y-su-recolecci√≥n&quot;&gt;Fuente de los datos y su recolecci√≥n&lt;/h2&gt;

&lt;p&gt;Ya ten√≠a tiempo queriendo hacer un dataset con informaci√≥n extra√≠da de Medium.com. Al principio, pens√© en hacer &lt;em&gt;web scraping&lt;/em&gt; masivamente en las publicaciones de Medium; el problema es que no proporcionan un sitio web ni f√°cil de &lt;em&gt;crawlear&lt;/em&gt; ni f√°cil de extraer informaci√≥n‚Ä¶ luego pens√© en ese ‚ÄúMedium Daily Digest‚Äù, un &lt;em&gt;newsletter&lt;/em&gt; que recibo todos los d√≠as, en √©l, Medium me env√≠a historias que ‚Äúme pueden interesar‚Äù; Recuerdo que cuando me suscrib√≠, tuve que elegir mis temas preferidos, y desde entonces siempre recibo un correo con art√≠culos sobre ellos.&lt;/p&gt;

&lt;p&gt;Con eso en mente, me propuse crear 20 cuentas de correo electr√≥nico diferentes (en realidad son alias para una sola cuenta) y luego usar cada una de ellas para suscribirse al mentado ‚ÄúMedium Daily Digest‚Äù, cada cuenta asociada con cinco diferentes (pero un tanto relacionados) temas. Y desde entonces he estado recibiendo 20 correos electr√≥nicos, todos los d√≠as con t√≠tulos, subt√≠tulos y URLs de posts.&lt;/p&gt;

&lt;p&gt;De vez en cuando inicio sesi√≥n en esas cuentas, abro algunos correos electr√≥nicos para evitar que dichas cuentas se eliminen de la sindicaci√≥n de Medium &lt;a href=&quot;(https://www.theverge.com/2019/7/3/20681508/tracking-pixel-email-spying-superhuman-web-beacon-open-tracking-read-receipts-location)&quot;&gt;porque esta gente sabe cu√°ndo no lees sus correos electr√≥nicos&lt;/a&gt;. Tambi√©n es de esperarse que los temas que ofrecen puedan cambiar con el tiempo, y en alg√∫n momento los intereses asociados de algunas cuentas pueden cambiar, en ese caso tendr√© que iniciar sesi√≥n en Medium y modificar las cuentas  manualmente, pero en su mayor parte la recopilaci√≥n de datos se ejecuta de manera autom√°tica.&lt;/p&gt;

&lt;p&gt;Por cierto, no estoy seguro de si el conjunto de datos ser√° √∫til para alguien, pero espero que la forma en que lo constru√≠ con Python sea √∫til para cualquiera con datos m√°s importantes.&lt;/p&gt;

&lt;h2 id=&quot;leyendo-los-correos-del-servidor&quot;&gt;Leyendo los correos del servidor&lt;/h2&gt;

&lt;p&gt;Como lo mencion√© anteriormente, los correos electr√≥nicos llegan a mi cuenta, y no es divertido tener que descargar 20 correos electr√≥nicos manualmente todos los d√≠as, por lo tanto, por primera vez en este art√≠culo: Python al rescate.&lt;/p&gt;

&lt;p&gt;Para acceder a los correos electr√≥nicos en mi servidor, uso el protocolo IMAP; Esto me permite leerlos sin tenerlos que borrar del servidor, en caso de que quiera acceder a ellos en el futuro. Para esto, a pesar de que Python ofrece el m√≥dulo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imaplib&lt;/code&gt; para interactuar con dichos servidores, decid√≠ usar el paquete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imapclient&lt;/code&gt; que, en mi opini√≥n, hace que el c√≥digo sea un poco m√°s limpio y comprensible. Leer todos los correos electr√≥nicos de una cuenta es tan f√°cil como muestra este fragmento de c√≥digo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;email&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;imapclient&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMAPClient&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMAPClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imap_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NOT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DELETED&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;fetched&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;RFC822&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_from_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;RFC822&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_message&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como puede ver, usamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMAPClient&lt;/code&gt; como &lt;em&gt;context manager&lt;/em&gt;, luego iniciamos sesi√≥n con nuestras credenciales de correo electr√≥nico (s√≠, es una pena que tengamos que usar nuestra contrase√±a directamente); despu√©s de iniciar sesi√≥n, buscamos todos los correos electr√≥nicos que no hemos eliminado (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETED&lt;/code&gt;), esto devolver√° una lista de cadenas que contienen los identificadores para cada mensaje; podemos iterar sobre estos identificadores y usar el cliente ejecut√°ndo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fetch&lt;/code&gt; para obtener cada mensaje, especificando que queremos la propiedad &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RFC822&lt;/code&gt; del correo electr√≥nico.&lt;/p&gt;

&lt;p&gt;El valor de retorno de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fetch&lt;/code&gt; ser√° un diccionario de la forma &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{ message_id: { b&quot;RFC822&quot;: (bytes) } }&lt;/code&gt;, podemos transformar f√°cilmente estos bytes en una representaci√≥n de correo electr√≥nico m√°s pyt√≥nica mediante el uso de la funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_from_bytes&lt;/code&gt;. Puedes ver mi implementaci√≥n real en la funci√≥n &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/medium_collector/download/reader.py#L6&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read_from_mail&lt;/code&gt;&lt;/a&gt; en mi repositorio.&lt;/p&gt;

&lt;h2 id=&quot;extrayendo-datos-del-correo-electr√≥nico&quot;&gt;Extrayendo datos del correo electr√≥nico&lt;/h2&gt;

&lt;p&gt;Teniendo un correo electr√≥nico con el que sea f√°cil trabajar en Python, me referir√© una publicaci√≥n anterior sobre &lt;a href=&quot;https://dev.to/fferegrino/reading-emails-with-python-4o72&quot;&gt;c√≥mo leer trabajar con correos electr√≥nicos con Python&lt;/a&gt;. Una vez que podemos &lt;em&gt;‚Äúleer‚Äù&lt;/em&gt; el mensaje, podemos acceder a propiedades como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;To&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;From&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subject&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Date&lt;/code&gt;, as√≠ como acceder al contenido real del correo electr√≥nico. Para referencia, mira este fragmento de c√≥digo donde &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; es lo que obtenemos al llamar a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_from_bytes&lt;/code&gt; en el fragmento de c√≥digo anterior:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;quopri&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;part&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_content_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quopri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decodestring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   
&lt;span class=&quot;n&quot;&gt;mail_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message-ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;  
    &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;To&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;  
    &lt;span class=&quot;s&quot;&gt;&quot;from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;From&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;  
    &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%a, %d %b %Y %H:%M:%S +0000 (%Z)&quot;&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El resultado final de este fragmento es producir un diccionario (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mail_info&lt;/code&gt;) que contenga informaci√≥n b√°sica del correo electr√≥nico y la versi√≥n html del correo electr√≥nico (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt;). Puedes ver mi implementaci√≥n real en la funci√≥n &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/medium_collector/download/parser.py#L34&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parse_mail&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para trabajar con el HTML del correo electr√≥nico utilic√© BeautifulSoup, no entrar√© en detalles, pero como siempre en &lt;em&gt;web scraping&lt;/em&gt;, fue un proceso de prueba y error obtener la estructura adecuada para extraer informaci√≥n del contenido del correo. Puedes ver la funci√≥n de extracci√≥n completa &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/master/medium_collector/download/parser.py#L50&quot;&gt;aqu√≠&lt;/a&gt;, todo se reduce a una lista de diccionarios (uno para cada publicaci√≥n en el correo electr√≥nico) con la siguiente informaci√≥n: &lt;em&gt;section_title&lt;/em&gt;, &lt;em&gt;post_title&lt;/em&gt;, &lt;em&gt;post_subtitle&lt;/em&gt;, &lt;em&gt;post_url&lt;/em&gt;, &lt;em&gt;author_name&lt;/em&gt;, &lt;em&gt;author_handle&lt;/em&gt;, &lt;em&gt;site_name&lt;/em&gt;, &lt;em&gt;site_slug&lt;/em&gt;, &lt;em&gt;members_only&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/jmkVSgz.png&quot; alt=&quot;Extraction description&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(en restrospectiva, pude haber extra√≠do el tiempo de lectura‚Ä¶ tal vez para la siguiente versi√≥n)&lt;/small&gt;.&lt;/p&gt;

&lt;h2 id=&quot;guardando-la-informaci√≥n&quot;&gt;Guardando la informaci√≥n&lt;/h2&gt;

&lt;p&gt;Despu√©s de descargar la informaci√≥n, esta es almacenada en dos archivos csv:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;mails.csv&lt;/em&gt;, que es un archivo de todos los correos electr√≥nicos recibidos, este contiene:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: un identificador √∫nico del correo electr√≥nico&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;: la fecha y hora en que se recibi√≥ el correo electr√≥nico&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;to&lt;/strong&gt;: un hash de la cuenta de correo electr√≥nico a la que se envi√≥ este correo electr√≥nico&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;from&lt;/strong&gt;: la cuenta de correo electr√≥nico utilizada para enviar el correo electr√≥nico (siempre es la misma)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;subject&lt;/strong&gt;:  el asunto del correo electr√≥nico&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;articles_mails.csv&lt;/em&gt;, contiene la informaci√≥n extra√≠da de cada correo electr√≥nico, asociada al correo electr√≥nico del que provienen:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;mail_id&lt;/strong&gt;: un identificador √∫nico del correo electr√≥nico del que proviene este art√≠culo, corresponde a &lt;strong&gt;id&lt;/strong&gt; en el archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mails.csv&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;post_url&lt;/strong&gt;: la url del art√≠culo&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;post_title&lt;/strong&gt;: el t√≠tulo del art√≠culo&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;post_subtitle&lt;/strong&gt;: el subt√≠tulo del art√≠culo&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;section_title&lt;/strong&gt;: el t√≠tulo de la secci√≥n en la que encontr√≥ la publicaci√≥n&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;members_only&lt;/strong&gt;: una bandera que especifica si el art√≠culo es para miembros de Medium&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;author_name&lt;/strong&gt;: nombre del autor del art√≠culo&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;author_handle&lt;/strong&gt;: identificador del autor del art√≠culo&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;site_name&lt;/strong&gt;: si el art√≠culo se public√≥ en un sitio, este contiene el nombre de dicho sitio&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;site_slug&lt;/strong&gt;: si el art√≠culo se public√≥ en un sitio, este contiene el identificador de dicho sitio&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para escribir toda esta informaci√≥n en los archivos, utilic√© el m√≥dulo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;csv&lt;/code&gt; siempre confiable, en particular, la clase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DictWriter&lt;/code&gt; que permite el uso de diccionarios cuando se llama al m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;writerow&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;EMAILS_FILE_HEADERS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;emails&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; 
           &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cosme@fulanito.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;noreply@medium.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	   &lt;span class=&quot;s&quot;&gt;&quot;subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Don't miss this!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMAILS_FILE_HEADERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeheader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En realidad, lo que hago es un poco m√°s complicado, ya que quiero agregar filas al conjunto de datos de forma incremental; por lo tanto, el archivo debe abrirse con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; como modo de archivo, no con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;w&quot;&lt;/code&gt; y es necesario tener especial cuidado para no escribir los encabezados en el medio del archivo tampoco. Puedes verificar toda la implementaci√≥n de las funciones de escritura en &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/medium_collector/download/writer.py&quot;&gt;este fragmento de c√≥digo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;cargando-la-informaci√≥n-a-s3&quot;&gt;Cargando la informaci√≥n a S3&lt;/h2&gt;

&lt;p&gt;Pero, ¬øde qu√© sirven estos datos si van a vivir guardados en mi computadora? Para superar este problema, pens√© en cargar los datos en un &lt;em&gt;bucket&lt;/em&gt; de S3, para que est√©n disponibles para descargarlo en cualquier lugar que lo necesite. Para acceder a cualquier recurso de AWS, mi herramienta favorita es el paquete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boto3&lt;/code&gt; que es una verdadera navaja suiza para AWS.&lt;/p&gt;

&lt;p&gt;Supongamos que desea cargar el archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;medium_data/mails.csv&lt;/code&gt; en el bucket &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;medium_bucket&quot;&lt;/code&gt; y que se llame &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;mails.csv&quot;&lt;/code&gt;, el siguiente c√≥digo ser√° suficiente:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;my_super_cool_bucket&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  
	&lt;span class=&quot;s&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;aws_access_key_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ACCESS_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;aws_secret_access_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SECRET_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
	&lt;span class=&quot;n&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eu-west-2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;medium_data/mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pero no quiero seguir cargando el mismo archivo una y otra vez si no hay necesidad de hacerlo. Para lograr esto, es posible verificar si el archivo existe en nuestro &lt;em&gt;bucket&lt;/em&gt; y resumir su contenido con un hash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5&lt;/code&gt; generado por el propio AWS. Entonces es solo una cuesti√≥n de comparar dicho hash con el hash del archivo local y si son iguales, no subo el archivo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hashlib&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_file_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;   
	&lt;span class=&quot;n&quot;&gt;hash_md5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
	&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
			&lt;span class=&quot;n&quot;&gt;hash_md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash_md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;md5_signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;medium_data/mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ETag&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;literal_eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ETag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md5_signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;# The file already exists, do nothing
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;medium_data/mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mails.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El m√©todo al que se debe llamar para obtener informaci√≥n para un objeto es &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head_object&lt;/code&gt;. Por cierto, toda la l√≥gica y la implementaci√≥n est√°n en &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/medium_collector/s3.py&quot;&gt;este archivo&lt;/a&gt; si quieres verlo.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Algunas consideraciones&lt;/em&gt;: para este ejemplo, consider√© que el &lt;em&gt;dep√≥sito&lt;/em&gt; ya existe, sin embargo, si no existe, tambi√©n es posible usar &lt;em&gt;boto&lt;/em&gt; para crearlo. Como dije, &lt;em&gt;boto&lt;/em&gt; es un monstruo de biblioteca que debes considerar si trabajas con AWS. Tambi√©n estoy usando las credenciales directamente en la llamada a la creaci√≥n del cliente para &lt;em&gt;s3&lt;/em&gt;, pero hay varias formas de manejar la autenticaci√≥n con &lt;em&gt;boto&lt;/em&gt;, consulta la documentaci√≥n para obtener m√°s informaci√≥n.&lt;/p&gt;

&lt;h2 id=&quot;cargando-los-datos-a-kaggle&quot;&gt;Cargando los datos a Kaggle&lt;/h2&gt;

&lt;p&gt;Hasta ahora, todo va muy bien, pero el conjunto de datos todav√≠a est√° disponible para m√≠, y aunque podr√≠a hacer p√∫blico mi &lt;em&gt;bucket&lt;/em&gt; de s3, hay algunos problemas con esto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No quiero que mi factura de S3 suba por el cielo si alguien con intenciones maliciosas se apodera de mi s3&lt;/li&gt;
  &lt;li&gt;Quiero que la gente use los datos, y con una url de s3 no es muy f√°cil de descubrir o promocionar el &lt;em&gt;dataset&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pero hay un buen lugar para almacenar conjuntos de datos, es gratuito y, al mismo tiempo, indexa los datos y los hace visibles al p√∫blico en generar. Estoy hablando de Kaggle.&lt;/p&gt;

&lt;p&gt;Kaggle hace que sea relativamente f√°cil interactuar con algunos de los recursos que ofrece el sitio web a trav√©s de su paquete &lt;a href=&quot;https://github.com/Kaggle/kaggle-api&quot;&gt;kaggle-api&lt;/a&gt;. En general, promueven la interacci√≥n a trav√©s de la l√≠nea de comando, sin embargo, tambi√©n es posible utilizar la API program√°tica que alimenta el &lt;em&gt;cli&lt;/em&gt;. Para cargar una nueva versi√≥n de mi conjunto de datos tuve que hacer algo como esto:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kaggle&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upload_to_kaggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataset_create_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quiet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	
&lt;span class=&quot;n&quot;&gt;upload_to_kaggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;medium_data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;A new version of this dataset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y eso es todo. Realmente, es as√≠ de f√°cil. Pero no tan r√°pido, es decir, si queremos actualizar un conjunto de datos, si estamos creando uno desde cero, primero debemos realizar tres cosas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Crear una carpeta (por ejemplo, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;medium_data&quot;&lt;/code&gt;) donde solo existen los archivos correspondientes a nuestro conjunto de datos&lt;/li&gt;
  &lt;li&gt;Tener un archivo llamado &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset-metadata.json&lt;/code&gt; en esa carpeta con los metadatos para su conjunto de datos, el aspecto del archivo debe parecerse al siguiente (pero puedes revisar el de mi app &lt;a href=&quot;https://github.com/fferegrino/medium-collector/blob/v0.0.0/data/dataset-metadata.json&quot;&gt;para un ejemplo m√°s concreto&lt;/a&gt;):&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;title&quot;: &quot;My Awesome Dataset&quot;, 
  &quot;id&quot;: &quot;cosme_fulanito/my-awesome-dataset&quot;, 
  &quot;licenses&quot;: [{&quot;name&quot;: &quot;CC0-1.0&quot;}]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Ejecutar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kaggle datasets create -p medium_data&lt;/code&gt; en la consola, o usar el m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset_create_new&lt;/code&gt; program√°ticamente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Realic√© esas tareas manualmente, ya que no es como si anduviera creando &lt;em&gt;datasets&lt;/em&gt; a cada rato, sino que simplemente los estoy tratando de actualizar, tu caso de uso puede ser diferente.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Algunas consideraciones&lt;/em&gt;: al igual que AWS, Kaggle tambi√©n ofrece algunas formas de autenticaci√≥n con su servicio, utilic√© el que m√°s promocionan: un archivo kaggle.json en &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.kaggle&lt;/code&gt;, pero puede usar algo diferente.&lt;/p&gt;

&lt;h2 id=&quot;pruebas&quot;&gt;Pruebas&lt;/h2&gt;

&lt;p&gt;Al igual que con cualquier pieza de software que se pondr√° en producci√≥n y que se ejecutar√° sin supervisi√≥n (sin mencionar que mi factura de s3 depende de que esto funcione correctamente), es bueno tener algunas pruebas solo para asegurarse de que haga lo que programamos. Sin embargo, inicialmente ten√≠a la intenci√≥n de escribir sobre las pruebas en esta publicaci√≥n, pero este post ya es suficientemente largo, por lo que publicar√© c√≥mo prob√© la aplicaci√≥n en una publicaci√≥n futura, as√≠ que aseg√∫rate de seguirme si quieres aprender sobre pruebas, &lt;em&gt;patching&lt;/em&gt; y &lt;em&gt;mocks&lt;/em&gt; (incluy√©ndo pruebas con servicios de AWS).&lt;/p&gt;

&lt;h3 id=&quot;preguntas-comentarios&quot;&gt;¬øPreguntas? ¬øcomentarios?&lt;/h3&gt;

&lt;p&gt;No olvides que me puedes dejar un comentario aqu√≠ o enviarme un tuit en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;, con gusto te ayudo si las cosas no est√°n claras o necesitas m√°s explicaci√≥n sobre el c√≥digo. Recuerda que la aplicaci√≥n completa est√° &lt;a href=&quot;https://github.com/fferegrino/medium-collector/tree/v0.0.0&quot;&gt;disponible en GitHub&lt;/a&gt; para que puedas jugar con el c√≥digo.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="blog" />
      
        <category term="python" />
      
        <category term="kaggle" />
      

      
        <summary type="html">S√© que Tacos de Datos est√° enfocado principalmente al resultado visual, pero creo que es importante tratar de resaltar qu√© es lo que hay detr√°s de. Quisiera inaugurar esta secci√≥n que llamar√© ‚ÄúDetr√°s de la visualizaci√≥n‚Äù para cubrir temas de extracci√≥n, procesamiento y almacenamiento de datos; en pocas palabras: ingenier√≠a de datos. Y es que, adem√°s de preparar los tacos, tambi√©n es bueno saber c√≥mo conseguir los ingredientes.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Visualizando temblores con ridgeline plots</title>
      <link href="https://old.tacosdedatos.com/visualizando-temblores-joyplots" rel="alternate" type="text/html" title="Visualizando temblores con ridgeline plots" />
      <published>2020-02-18T10:00:00+00:00</published>
      <updated>2020-02-18T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/visualizando-temblores-joyplots</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/visualizando-temblores-joyplots">&lt;p&gt;Seguramente has visto todas esas gr√°ficas parecieran sacadas de portadas de √°lbums‚Ä¶ pues bien, en este post te voy a ense√±ar c√≥mo crearla usando matplotlib, python y los datos del sistema sismol√≥gico nacional mexicano.&lt;/p&gt;

&lt;p&gt;Lo primero que vamos a hacer es descargar la informaci√≥n de sobre los temblores de la &lt;a href=&quot;http://www2.ssn.unam.mx:8080/catalogo/&quot;&gt;p√°gina del Sistema Sismol√≥gico Nacional&lt;/a&gt;, en este caso yo eleg√≠ los datos del 1 de enero de 2017 al 1 de enero de 2018, pero tu puedes elegir otros. Despu√©s vamos a descargar un archivo con las siluetas de los estados de M√©xico, por ejemplo el &lt;a href=&quot;https://tapiquen-sig.jimdofree.com/descargas-gratuitas/m%C3%A9xico/&quot;&gt;sitio de Carlos Efra√≠n Porto Tapiqu√©n&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una vez hecho esto, vamos a instalar unos cuantos paquetes que nos van a ayudar con la visualizaci√≥n:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;matplotlib&lt;/li&gt;
  &lt;li&gt;numpy&lt;/li&gt;
  &lt;li&gt;pandas&lt;/li&gt;
  &lt;li&gt;geopandas&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;geopandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gpd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Leemos los datos de los temblores, tenemos que saltarnos las primeras cuatro filas porque el Sismol√≥gico Nacional decidi√≥ que tener un archivo CSV normal no val√≠a la pena.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;earthquakes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SSNMX_catalogo_20170101_20180101.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skiprows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;earthquakes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fecha&lt;/th&gt;
      &lt;th&gt;Hora&lt;/th&gt;
      &lt;th&gt;Magnitud&lt;/th&gt;
      &lt;th&gt;Latitud&lt;/th&gt;
      &lt;th&gt;Longitud&lt;/th&gt;
      &lt;th&gt;Profundidad&lt;/th&gt;
      &lt;th&gt;Referencia de localizacion&lt;/th&gt;
      &lt;th&gt;Fecha UTC&lt;/th&gt;
      &lt;th&gt;Hora UTC&lt;/th&gt;
      &lt;th&gt;Estatus&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2017-01-01&lt;/td&gt;
      &lt;td&gt;00:15:59&lt;/td&gt;
      &lt;td&gt;3.5&lt;/td&gt;
      &lt;td&gt;15.2218&lt;/td&gt;
      &lt;td&gt;-93.1245&lt;/td&gt;
      &lt;td&gt;81.5&lt;/td&gt;
      &lt;td&gt;35 km al SUROESTE de MAPASTEPEC, CHIS&lt;/td&gt;
      &lt;td&gt;2017-01-01&lt;/td&gt;
      &lt;td&gt;06:15:59&lt;/td&gt;
      &lt;td&gt;revisado&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2017-01-01&lt;/td&gt;
      &lt;td&gt;00:16:06&lt;/td&gt;
      &lt;td&gt;3.2&lt;/td&gt;
      &lt;td&gt;16.9610&lt;/td&gt;
      &lt;td&gt;-99.5348&lt;/td&gt;
      &lt;td&gt;36.7&lt;/td&gt;
      &lt;td&gt;24 km al NOROESTE de SAN MARCOS, GRO&lt;/td&gt;
      &lt;td&gt;2017-01-01&lt;/td&gt;
      &lt;td&gt;06:16:06&lt;/td&gt;
      &lt;td&gt;revisado&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Leemos tambi√©n los datos del archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.shp&lt;/code&gt;, que son los datos que podemos usar para dibujar el mapa de M√©xico:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;map_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M√©xico_Estados.shp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;map_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;CODIGO&lt;/th&gt;
      &lt;th&gt;ESTADO&lt;/th&gt;
      &lt;th&gt;geometry&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;MX02&lt;/td&gt;
      &lt;td&gt;Baja California&lt;/td&gt;
      &lt;td&gt;MULTIPOLYGON (((-113.13972 29.01778, -113.51195 29.30305, -113.60028 29.43916, -113.57390 29.50583, -113.58862 29.58361, -113.40529 29.482 (...)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;MX03&lt;/td&gt;
      &lt;td&gt;Baja California Sur&lt;/td&gt;
      &lt;td&gt;MULTIPOLYGON (((-111.20612 25.80278, -111.23029 25.83416, -111.19139 26.03889,  (...)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;histograma-2d&quot;&gt;Histograma 2D&lt;/h2&gt;

&lt;p&gt;La columna vertebral de nuestra visualizaci√≥n es un histograma en dos dimensiones, muy parecido al que realic√© hace unos d√≠as con mis datos de Spotify. En este caso vamos a hacer uso de NumPy para generar dicho histograma, para nosotros el eje de las &lt;em&gt;x&lt;/em&gt; ser√° la &lt;em&gt;longitud&lt;/em&gt; y el de las &lt;em&gt;y&lt;/em&gt; es la &lt;em&gt;latitud&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;105.68&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;92.04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;20.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;13.79&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;coordinates_range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xedges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yedges&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;earthquakes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Longitud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;earthquakes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Latitud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Los par√°metros que le pasamos a la funci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;histogram2d&lt;/code&gt; son:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;: las coordenadas en el eje X a tomar en cuenta&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;: las coordenadas en el eje Y a tomar en cuenta&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range&lt;/code&gt;: los l√≠mites que debe cubrir nuestro histograma, en este caso, como estamos tratando con las coordenadas del sur de M√©xico, -105.68 a la izquierda, -92.04 a la derecha, 20.14 arriba, 13.79 abajo.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bins&lt;/code&gt;: el n√∫mero de &lt;em&gt;‚Äúcubetas‚Äù&lt;/em&gt; a crear, en nuestro caso, se crear√°n 600 cubetas horizontalmente y 100 verticales&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El resultado del m√©todo es una tripleta de valores:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;values&lt;/code&gt;: un arreglo bidimensional con los valores de la cubeta, con nuestros valores anteriores las dimensiones de la cubeta son (600, 100)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xedges&lt;/code&gt;: los l√≠mites de las cubetas en el eje de las X, un arreglo de 601 entradas&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yedges&lt;/code&gt;: los l√≠mites de las cubetas en el eje de las y, un arreglo de 101 entradas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si te est√°s preguntando por qu√© tanto &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xedges&lt;/code&gt; como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yedges&lt;/code&gt; tienen tan peculiar n√∫mero de entradas es por que los valores de la cubeta incluyen ambos bordes (derecha-izquierda, arriba-abajo), en el caso de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xedges&lt;/code&gt; tenemos algo como esto:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Gk1iWLf.png&quot; alt=&quot;visualizando xedges&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mientras que tener acceso a los bordes es √∫til para la mayor√≠a de los casos, para nuestro caso no lo es tanto, lo que vamos a hacer es promediar los bordes de las cubetas para obtener un par √∫nico para cada una de ellas, dej√°ndonos un arreglo de 600 entradas para el eje &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; y 100 para &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/NVF9ixW.png&quot; alt=&quot;visualizando xavg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;xavg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xedges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xedges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yavg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yedges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yedges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que casi tenemos todo, toca hacer un peque√±o truco para escalar los valores, y es que si usamos los valores &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;values&lt;/code&gt; como est√°n, nuestra gr√°fica terminar√≠a saturada:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scale_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scaled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora s√≠, a graficar:&lt;/p&gt;

&lt;p&gt;Creamos una nueva figura, de dimensiones considerables:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Graficamos el las siluetas de los estados mexicanos usando el dataframe obtenido de leer los datos con &lt;em&gt;geopandas&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;map_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#eeeeee'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edgecolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#B3B3B3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El siguiente paso es graficar cada una de las l√≠neas horizontales que representan los valores percibidos (contenidos dentro de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scaled&lt;/code&gt;), si te das cuenta, estamos sumando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yavg[i]&lt;/code&gt; a cada iteraci√≥n, esto es para mover nuestras gr√°ficas a lo largo del eje vertical.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yavg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xavg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scaled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yavg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como solamente estamos interesados en una porci√≥n de los datos, debemos establecer los l√≠mites de la informaci√≥n que queremos mostrar:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y con eso bastar√≠a para poder ver resultados de nuestra gr√°fica, sin embargo, podemos mejorarla un poco m√°s removiendo las marcas de los ejes, poni√©ndole un t√≠tulo y por √∫ltimo a√±adi√©ndole la informaci√≥n del autor y la fuente de los datos:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Earthquakes in Mexico (2017/01/01 - 2018/01/01)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnchoredText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@io_exception - Data: SSN M√©xico&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/MHLosn4.png&quot; alt=&quot;visualizando xavg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya quedar√° en ti modificar algunos aspectos de la gr√°fica, tal vez ponerle un poco m√°s de color, mejorar la escala de los datos, incluyendo m√°s factores, o hacer una gr√°fica similar pero con otros datos. Por lo mientras, te invito a jugar con los datos en &lt;a href=&quot;https://colab.research.google.com/drive/1fwVd2QMEMXgrJD-XNDv5EGayjZYAX7IB&quot;&gt;este Google Colab Notebook&lt;/a&gt; y a que me contactes &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;v√≠a twitter en @io_exception&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="blog" />
      
        <category term="sismos" />
      
        <category term="ridgeline plots" />
      
        <category term="matplotlib" />
      
        <category term="python" />
      

      
        <summary type="html">Seguramente has visto todas esas gr√°ficas parecieran sacadas de portadas de √°lbums‚Ä¶ pues bien, en este post te voy a ense√±ar c√≥mo crearla usando matplotlib, python y los datos del sistema sismol√≥gico nacional mexicano.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">M√°s visualizaci√≥n con tus datos de Spotify con Python</title>
      <link href="https://old.tacosdedatos.com/mas-data-viz-con-spotify-python" rel="alternate" type="text/html" title="M√°s visualizaci√≥n con tus datos de Spotify con Python" />
      <published>2020-02-11T10:00:00+00:00</published>
      <updated>2020-02-11T10:00:00+00:00</updated>
      <id>https://old.tacosdedatos.com/mas-data-viz-con-spotify-python</id>
      <content type="html" xml:base="https://old.tacosdedatos.com/mas-data-viz-con-spotify-python">&lt;p&gt;Inspirado por &lt;a href=&quot;https://tacosdedatos.com/dueno-de-mis-datos-spotify&quot;&gt;el post de Nerudista en Tacos de datos&lt;/a&gt; fui a pedirles mi informaci√≥n a Spotify con el fin de hacer unas cuantas gr√°ficas con ella.&lt;/p&gt;

&lt;p&gt;Si tu quieres hacer lo mismo, puedes ir a pedirlos en &lt;a href=&quot;https://www.spotify.com/es/account/privacy/&quot;&gt;esta p√°gina&lt;/a&gt;, una vez que la solicites, tomar√° un par de d√≠as para que la puedas descargar. Por lo mientras puedes usar &lt;a href=&quot;https://colab.research.google.com/drive/1dnjCKGllq5v1iEUuoQxbROMG0IXfgoiG&quot;&gt;este Colab&lt;/a&gt; con unos cuantos de mis datos para que puedas practicar lo que ves en este post.&lt;/p&gt;

&lt;p&gt;Pero en fin, entre toda la informaci√≥n que recibir√°s, habr√°n algunos archivos que se llaman &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamingHistoryXX.json&lt;/code&gt;, estos son con los que estaremos trabajando en el resto del post.&lt;/p&gt;

&lt;h2 id=&quot;los-datos&quot;&gt;Los datos&lt;/h2&gt;

&lt;p&gt;Los archivos dentro de los archivos &lt;em&gt;json&lt;/em&gt; mencionados anteriormente se ven m√°s o menos as√≠:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-02-04 17:14&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;artistName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MGMT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;trackName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Time to Pretend&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;msPlayed&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;261000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-02-04 17:18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;artistName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MGMT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En donde estos son los valores:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;endTime&lt;/code&gt;: D√≠a y hora en los que finaliz√≥ la reproducci√≥n, en formato UTC (Tiempo Universal Coordinado).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;artistName&lt;/code&gt;: Nombre del ‚Äúcreador‚Äù de cada elemento reproducido (por ejemplo, el nombre del artista de una canci√≥n).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;trackName&lt;/code&gt;: Nombre de los elementos reproducidos o vistos (por ejemplo, t√≠tulo de una canci√≥n o nombre de un video).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msPlayed&lt;/code&gt;: significa cu√°ntos milisegundos se reprodujo una canci√≥n.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para leer estos datos en un DataFrame (que es como los vamos a ocupar m√°s adelante) vamos a hacer uso de esta peque√±a funci√≥n:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glob&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;StreamingHistory*.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El cual nos dejar√° algo como esto cuando lo ejecutemos:&lt;/p&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;endTime&lt;/th&gt;
      &lt;th&gt;artistName&lt;/th&gt;
      &lt;th&gt;trackName&lt;/th&gt;
      &lt;th&gt;msPlayed&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-02-04 17:14:00&lt;/td&gt;
      &lt;td&gt;MGMT&lt;/td&gt;
      &lt;td&gt;Time to Pretend&lt;/td&gt;
      &lt;td&gt;261000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-02-04 17:18:00&lt;/td&gt;
      &lt;td&gt;MGMT&lt;/td&gt;
      &lt;td&gt;When You Die&lt;/td&gt;
      &lt;td&gt;263880&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-02-04 17:23:00&lt;/td&gt;
      &lt;td&gt;Mr Dooves&lt;/td&gt;
      &lt;td&gt;Super Smash Bros. Brawl Main Theme (From &quot;Super Smash Bros. Brawl&quot;) [A Cappella]&lt;/td&gt;
      &lt;td&gt;201518&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;histograma&quot;&gt;Histograma&lt;/h2&gt;

&lt;p&gt;Siempre he sido fan de la forma en la que GitHub presenta las contribuciones que cada desarrollador hace en el sitio, y me parece que los datos obtenidos de Spotify, pero antes vamos a tener que modificar los datos un poco.&lt;/p&gt;

&lt;p&gt;Como no nos interesa la hora en que cada canci√≥n termin√≥, primero vamos a deshacernos de la parte temporal de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;endTime&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Luego vamos a obtener un conteo de canciones por d√≠a con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groupby&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trackName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para nuestra gr√°fica, necesitamos tambi√©n saber a qu√© d√≠a de la semana y qu√© n√∫mero de semana corresponde cada fecha, esto lo obtenemos con las propiedades &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;week&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weekday&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;weekday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekday&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;week&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y que al final dejar√° nuestro DataFrame vi√©ndose as√≠:&lt;/p&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;trackName&lt;/th&gt;
      &lt;th&gt;weekday&lt;/th&gt;
      &lt;th&gt;week&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-04&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-05&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-07&lt;/th&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Hasta el momento ya tenemos casi todo, lo que falta es obtener n√∫meros continuos para la semana, es decir, en el frame de arriba la semana 6 de 2019 debe ser la semana 0, la semana 7 debe ser la semana 1‚Ä¶ a mi no se me ocurre otra manera de hacerlo m√°s que con un ciclo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prev_week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;continuous_week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sunday_dates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev_week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prev_week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;continuous_week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;week&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;continuous_week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;continuous_week&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;trackName&lt;/th&gt;
      &lt;th&gt;weekday&lt;/th&gt;
      &lt;th&gt;week&lt;/th&gt;
      &lt;th&gt;continuous_week&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-04&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-05&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2019-02-07&lt;/th&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;El siguiente paso es preparar, con NumPy, una matriz de tama√±o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d√≠as ‚úï semanas&lt;/code&gt; en donde cada una de las entradas ser√° la cantidad de canciones que escuchamos en ese d√≠a, de esa semana:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;continuous_week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;weekday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;continuous_week&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trackName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora, simplemente podr√≠amos graficar el la matriz &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;songs&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isnan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heatmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sin embargo el resultado no es tan agradable:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/kq4hxl4yddbzsfqt0yl5.png&quot; alt=&quot;Histograma horrible&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que podemos hacer para mejorarlo requiere de un poco m√°s de c√≥digo. Lo primero es limpiar un poco las etiquetas de los ejes:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;min_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streaming_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;endTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;first_monday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_monday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weeks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wk&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;continuous_week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month_abbr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month_abbr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;y_labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Definitivamente las etiquetas del eje de las X son mucho m√°s complicado que las de Y, ya que no son continuas ni fijas, deben ser calculadas de acuerdo a los datos (si quieres un poco m√°s de explicaci√≥n sobre el c√≥digo, dime en los comentarios o en &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;@io_exception&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Despu√©s vamos a hacer un poco de &lt;em&gt;grafimagia&lt;/em&gt; con el tama√±o de la gr√°fica, colores y los ejes:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My year on Spotify&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tick_top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tick_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'both'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'both'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_facecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#ebedf0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_facecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y ya por √∫ltimo, usaremos el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heatmap&lt;/code&gt; de &lt;em&gt;seaborn&lt;/em&gt; con algunos cuantos argumentos que explicar√© m√°s adelante y desde luego, no olvides que hay que poner las etiquetas que tanto nos cost√≥ conseguir:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heatmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linecolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isnan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;songs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Greens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_yticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Los argumentos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;songs&lt;/code&gt;: nuestra matriz de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d√≠as ‚úï semanas&lt;/code&gt; con la cuenta de canciones por d√≠a,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linewidths&lt;/code&gt;: el tama√±o de la separaci√≥n entre cada recuadro,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linecolor&lt;/code&gt;: el color de la separaci√≥n entre cada recuadro,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;square&lt;/code&gt;: le indica a la funci√≥n que queremos que se respete la relaci√≥n &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1:1&lt;/code&gt; en el tama√±o de cada recuadro,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mask&lt;/code&gt;: este es un argumento bastante interesante, ya que nos va a ayudar a ‚Äúenmascarar‚Äù llos recuadros para los que no tenemos informaci√≥n. Lo establecemos a una matriz de valores booleanos (de tama√±o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d√≠as ‚úï semanas&lt;/code&gt;), en donde cada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;True&lt;/code&gt; significa que no hay informaci√≥n para dicho d√≠a/semana&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmap&lt;/code&gt;: el &lt;em&gt;colormap&lt;/em&gt; que se debe aplicar, curiosamente ‚ÄúGreens‚Äù coincide bastante con la coloraci√≥n que usa GitHub,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmin&lt;/code&gt;: el valor que consideramos como el m√≠nimo de entre todos nuestros valores,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmax&lt;/code&gt;: el valor que consideramos m√°ximo de entre todos nuestros valores, en mi caso considero que 100 canciones es el m√°ximo, ¬°a pesar de que mi r√©cord es de 190 en un d√≠a!&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cbar&lt;/code&gt;: valor &lt;em&gt;booleano&lt;/em&gt; para indicar si queremos o no mostrar la barra de color que usualmente acompa√±a a el &lt;em&gt;heatmap&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt;: el &lt;em&gt;axes&lt;/em&gt; sobre el que se debe dibujar la gr√°fica.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y &lt;em&gt;voil√†&lt;/em&gt;, nuestra gr√°fica est√° lista:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dev-to-uploads.s3.amazonaws.com/i/jdxkpdasrfc5arj3rnlw.png&quot; alt=&quot;Histograma bonito&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya quedar√° en ti modificar algunos aspectos de la gr√°fica, tal vez ponerle informaci√≥n acerca de la cantidad de canciones, habilitar la barra de color‚Ä¶ otra gran idea ser√≠a hacer lo mismo pero en un &lt;em&gt;framework&lt;/em&gt; como D3.js, pero eso ya queda para otro post. Por lo mientras, te invito a jugar con los datos en &lt;a href=&quot;https://colab.research.google.com/drive/1dnjCKGllq5v1iEUuoQxbROMG0IXfgoiG&quot;&gt;este Google Colab Notebook&lt;/a&gt; y a que me contactes &lt;a href=&quot;https://twitter.com/io_exception&quot;&gt;v√≠a twitter en @io_exception&lt;/a&gt;.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Antonio Feregrino Bola√±os</name>
        
        
      </author>

      

      
        <category term="blog" />
      
        <category term="Spotify" />
      
        <category term="seaborn" />
      
        <category term="matplotlib" />
      
        <category term="python" />
      

      
        <summary type="html">Inspirado por el post de Nerudista en Tacos de datos fui a pedirles mi informaci√≥n a Spotify con el fin de hacer unas cuantas gr√°ficas con ella.</summary>
      

      
      
    </entry>
  
</feed>
